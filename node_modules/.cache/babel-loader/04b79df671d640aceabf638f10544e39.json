{"ast":null,"code":"var _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Login.js\";\nimport React from 'react';\nimport './Form.css';\nimport Swal from 'sweetalert2';\nimport { connect } from 'react-redux';\nimport { setToken } from '../reducer/actions';\nimport { authUser } from '../reducer/actions';\nimport { Link, useHistory } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      fetch(\"http://localhost:3000/login\", {\n        method: 'POST',\n        headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(r => r.json()).then(data => {\n        if (data.errors) {\n          Swal.fire({\n            icon: 'warning',\n            title: 'Oops...',\n            text: data.errors\n          });\n        } else {\n          localStorage.token = data.token;\n          localStorage.id = data.id;\n          this.props.setToken(data.token, data.id);\n          this.props.authUser(data.token, data.id);\n          const history = useHistory();\n          console.log(history);\n          this.setState({\n            username: \"\",\n            password: \"\"\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"ui large form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"password\",\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"ui teal button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setToken,\n  authUser\n})(Login);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Login.js"],"names":["React","Swal","connect","setToken","authUser","Link","useHistory","Login","Component","state","username","password","handleChange","evt","setState","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","data","errors","fire","icon","title","text","localStorage","token","id","props","history","console","log","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;;AAEC,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFyB;;AAAA,SAOjCC,YAPiC,GAOjBC,GAAD,IAAS;AACvB,WAAKC,QAAL,CAAc;AACV,SAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,GAAmBH,GAAG,CAACE,MAAJ,CAAWE;AADpB,OAAd;AAGD,KAXiC;;AAAA,SAajCC,YAbiC,GAajBL,GAAD,IAAS;AACpBA,MAAAA,GAAG,CAACM,cAAJ;AACAC,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFwB;AAMjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKhB,KAApB;AAN2B,OAAhC,CAAL,CAQCiB,IARD,CAQMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARX,EASCF,IATD,CASMG,IAAI,IAAI;AACV,YAAIA,IAAI,CAACC,MAAT,EAAiB;AAChB7B,UAAAA,IAAI,CAAC8B,IAAL,CAAU;AACNC,YAAAA,IAAI,EAAE,SADA;AAENC,YAAAA,KAAK,EAAE,SAFD;AAGNC,YAAAA,IAAI,EAAEL,IAAI,CAACC;AAHL,WAAV;AAKA,SAND,MAMO;AAEHK,UAAAA,YAAY,CAACC,KAAb,GAAqBP,IAAI,CAACO,KAA1B;AACAD,UAAAA,YAAY,CAACE,EAAb,GAAkBR,IAAI,CAACQ,EAAvB;AAEA,eAAKC,KAAL,CAAWnC,QAAX,CAAoB0B,IAAI,CAACO,KAAzB,EAAgCP,IAAI,CAACQ,EAArC;AACA,eAAKC,KAAL,CAAWlC,QAAX,CAAoByB,IAAI,CAACO,KAAzB,EAAgCP,IAAI,CAACQ,EAArC;AAEA,gBAAME,OAAO,GAAGjC,UAAU,EAA1B;AAEAkC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACC,eAAKzB,QAAL,CAAc;AACdJ,YAAAA,QAAQ,EAAE,EADI;AAEdC,YAAAA,QAAQ,EAAE;AAFI,WAAd;AAMJ;AACJ,OAlCD;AAsCH,KArDgC;AAAA;;AAuDhC+B,EAAAA,MAAM,GAAE;AAEJ,WAGM;AAAM,MAAA,QAAQ,EAAE,KAAKxB,YAArB;AAAmC,MAAA,SAAS,EAAC,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADL,EAEK;AAAO,MAAA,QAAQ,EAAE,KAAKN,YAAtB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHL,EAIK;AAAO,MAAA,QAAQ,EAAE,KAAKE,YAAtB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJL,EAKK;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALL,CAHN;AAaH;;AAtE+B;;AA0EpC,MAAMgC,eAAe,GAAIlC,KAAD,IAAW;AAC/B,SAAO;AACH2B,IAAAA,KAAK,EAAE3B,KAAK,CAAC2B;AADV,GAAP;AAGH,CAJD;;AAOA,eAAelC,OAAO,CAACyC,eAAD,EAAkB;AAACxC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAA+CG,KAA/C,CAAf","sourcesContent":["import React from 'react';\nimport './Form.css'\nimport Swal from 'sweetalert2'\nimport { connect } from 'react-redux';\nimport {setToken} from '../reducer/actions'\nimport {authUser} from '../reducer/actions'\nimport {Link, useHistory} from 'react-router-dom'\n\n class Login extends React.Component{\n\n   state = {\n       username: \"\",\n       password: \"\"\n   }\n\n   handleChange = (evt) => {\n    this.setState({\n        [evt.target.name]: evt.target.value\n    })\n  }\n\n   handleSubmit = (evt) => {\n       evt.preventDefault()\n       fetch(\"http://localhost:3000/login\", {\n           method: 'POST',\n           headers: {\n               \"content-type\": \"application/json\",\n               \"accept\": \"application/json\"\n           },\n           body: JSON.stringify(this.state)\n       })\n       .then(r => r.json())\n       .then(data => {\n           if (data.errors) {\n            Swal.fire({\n                icon: 'warning',\n                title: 'Oops...',\n                text: data.errors\n              })\n           } else {\n               \n               localStorage.token = data.token\n               localStorage.id = data.id\n               \n               this.props.setToken(data.token, data.id)\n               this.props.authUser(data.token, data.id)\n               \n               const history = useHistory()\n\n               console.log(history)\n                this.setState({\n                username: \"\",\n                password: \"\"\n                })\n             \n               \n           }\n       })\n\n       \n       \n   }\n   \n    render(){\n        \n        return (\n            \n           \n              <form onSubmit={this.handleSubmit} className=\"ui large form\">\n                   <label>Username:</label>\n                   <input onChange={this.handleChange} type=\"text\" name=\"username\" value={this.state.username}></input>\n                   <label>Password:</label>\n                   <input onChange={this.handleChange} type=\"text\" name=\"password\" value={this.state.password}></input>\n                   <input type=\"submit\" className=\"ui teal button\"></input>\n              </form> \n     \n           \n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        token: state.token\n    }\n}\n\n\nexport default connect(mapStateToProps, {setToken, authUser})(Login)"]},"metadata":{},"sourceType":"module"}