{"ast":null,"code":"import _objectSpread from \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Profile.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Profile.css';\nimport { Link } from 'react-router-dom';\nimport { LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource } from '../reducer/actions';\nimport uuid from 'uuid';\nimport Calendar from './Calendar';\nimport SearcBar from './SearchBar';\nimport MapContainer from './MapContainer';\nimport { Segment, Button, List, Image, Grid } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      rescheduleClicked: false,\n      rescheduleAppoinId: ''\n    };\n\n    this.handleLogOutClick = () => {\n      localStorage.clear();\n      this.props.LogOut();\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.handleDelete = () => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('id');\n      this.props.deleteUser(this.props.user);\n    };\n\n    this.appointmentLi = () => {\n      return this.props.user.provider_appointments.map(appoint => {\n        let provider = this.props.user.providers.find(p => p.id === appoint.provider_id);\n        return React.createElement(List.Item, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          onClick: () => {\n            Swal.fire({\n              icon: 'info',\n              text: `You have an appointment with Dr.${provider.last_name} on ${appoint.appoint_date}`\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, appoint.appoint_date), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"mini\",\n          className: \"teal\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleSetReschedule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Reschedule\"), React.createElement(Button, {\n          size: \"mini\",\n          className: \"red\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleAppoDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Cancel\"))));\n      });\n    };\n\n    this.providersImg = () => {\n      const providers = [...this.props.user.providers];\n      const uniqueProviders = Array.from(new Set(providers.map(p => p.id))).map(id => {\n        return providers.find(p => {\n          return p.id === id;\n        });\n      });\n      return uniqueProviders.map(provider => {\n        return React.createElement(Image, {\n          size: \"tiny\",\n          onClick: this.pickProv,\n          key: uuid(),\n          \"data-id\": provider.id,\n          src: provider.img_url,\n          alt: provider.last_name,\n          circular: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.confirmAppo = () => {\n      if (this.props.user.specialty) {\n        this.props.createAppointment(this.props.date, this.props.pickedId, this.props.user.id);\n      } else {\n        this.props.createAppointment(this.props.date, this.props.user.id, this.props.pickedId);\n      }\n    };\n\n    this.pickProv = evt => {\n      this.props.setPickedUserId(evt.target.dataset.id);\n    };\n\n    this.handleAppoDelete = evt => {\n      this.props.deleteAppointment(evt.target.dataset.id);\n    };\n\n    this.handleSetReschedule = evt => {\n      this.setState(_objectSpread({}, this.state, {\n        rescheduleClicked: true,\n        rescheduleAppoinId: evt.target.dataset.id\n      }));\n    };\n\n    this.updateAppointdate = () => {\n      this.props.updateAppointment(this.state.rescheduleAppoinId, this.props.date);\n      this.setState(_objectSpread({}, this.state, {\n        rescheduleClicked: false\n      }));\n    };\n\n    this.providerAppoLi = () => {\n      return this.props.user.client_appointments.map(appoint => {\n        let client = this.props.user.clients.find(c => c.id === appoint.client_id);\n        console.log(client);\n        return React.createElement(List.Item, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, appoint.appoint_date), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"teal\",\n          size: \"mini\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleSetReschedule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"Reschedule\"), React.createElement(Button, {\n          className: \"red\",\n          size: \"mini\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleAppoDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Cancel\"))));\n      });\n    };\n\n    this.clientsImg = () => {\n      const clients = [...this.props.user.clients];\n      const uniqueClients = Array.from(new Set(clients.map(c => c.id))).map(id => {\n        return clients.find(c => {\n          return c.id === id;\n        });\n      });\n      return uniqueClients.map(client => {\n        return React.createElement(Image, {\n          size: \"tiny\",\n          onClick: this.pickProv,\n          key: uuid(),\n          \"data-id\": client.id,\n          src: client.img_url,\n          alt: client.last_name,\n          circular: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.changeUpdatedState = () => {\n      this.props.changeUpdateState();\n    };\n  }\n\n  componentDidMount() {\n    this.props.newSource();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"top div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(SearcBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      relaxed: true,\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.state.clicked ? React.createElement(Segment.Group, {\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      onClick: this.handleClick,\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(List.Icon, {\n      name: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Full name: \", this.props.user.first_name, \" \", this.props.user.last_name), React.createElement(List.Icon, {\n      name: \"marker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Address: \", this.props.user.address, \" \"), React.createElement(List.Icon, {\n      name: \"mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Email: \", this.props.user.email, \" \"), React.createElement(List.Icon, {\n      name: \"linkify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Contact: \", this.props.user.phone_number, \" \"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.changeUpdatedState,\n      className: \"teal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.handleDelete,\n      className: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Delete\"))))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      address: this.props.user.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))) : React.createElement(Segment.Group, {\n      onClick: this.handleClick,\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: this.props.user.img_url,\n      alt: this.props.user.username,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Hi! Welcome \", this.props.user.username, \"! \"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.handleLogOutClick,\n      className: \"teal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Logout\")))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Please click on the picture to choose\", React.createElement(\"div\", {\n      className: \"ui tiny circular images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.props.user.providers ? this.providersImg() : null, this.props.user.clients ? this.clientsImg() : null), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Please choose a date to schedule your appointment\", React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      className: \"teal\",\n      onClick: this.confirmAppo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Schedule\")))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Appointments:\", this.props.user.provider_appointments ? this.appointmentLi() : null, this.props.user.client_appointments ? this.providerAppoLi() : null), this.state.rescheduleClicked ? React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Please select a date: \", React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"teal\",\n      onClick: this.updateAppointdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"confirm\")) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    date: state.date,\n    pickedId: state.pickedId,\n    updated: state.updated,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps, {\n  LogOut,\n  deleteUser,\n  setPickedUserId,\n  createAppointment,\n  deleteAppointment,\n  updateAppointment,\n  authUser,\n  changeUpdateState,\n  newSource\n})(Profile);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Profile.js"],"names":["React","connect","Link","LogOut","deleteUser","setPickedUserId","createAppointment","deleteAppointment","updateAppointment","authUser","changeUpdateState","newSource","uuid","Calendar","SearcBar","MapContainer","Segment","Button","List","Image","Grid","Swal","Profile","Component","state","clicked","rescheduleClicked","rescheduleAppoinId","handleLogOutClick","localStorage","clear","props","handleClick","setState","handleDelete","removeItem","user","appointmentLi","provider_appointments","map","appoint","provider","providers","find","p","id","provider_id","fire","icon","text","last_name","appoint_date","handleSetReschedule","handleAppoDelete","providersImg","uniqueProviders","Array","from","Set","pickProv","img_url","confirmAppo","specialty","date","pickedId","evt","target","dataset","updateAppointdate","providerAppoLi","client_appointments","client","clients","c","client_id","console","log","clientsImg","uniqueClients","changeUpdatedState","componentDidMount","render","first_name","address","email","phone_number","username","mapStateToProps","updated","source"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport './Profile.css'\nimport {Link} from 'react-router-dom'\nimport { LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource } from '../reducer/actions'\nimport uuid from 'uuid'\nimport Calendar from './Calendar'\nimport SearcBar from './SearchBar'\nimport MapContainer from './MapContainer'\nimport { Segment, Button, List, Image, Grid } from 'semantic-ui-react';\nimport Swal from 'sweetalert2'\n\n\nclass Profile extends React.Component {\n\n state={\n     clicked: false,\n     rescheduleClicked: false,\n     rescheduleAppoinId: ''\n }\n\n componentDidMount() {\n   this.props.newSource()\n }\n\nhandleLogOutClick = () => {\n    \n    localStorage.clear()\n    \n    this.props.LogOut()\n  \n}\n\nhandleClick = () => {\n    this.setState({\n        clicked: !this.state.clicked\n    })\n}\n\n\nhandleDelete = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('id')\n    this.props.deleteUser(this.props.user)\n}\n\nappointmentLi = () => {\n  \n    return this.props.user.provider_appointments.map((appoint) => {\n           let provider = this.props.user.providers.find((p) => p.id === appoint.provider_id)\n           \n    return (\n                <List.Item key={uuid()}>\n                 <List.Content key={uuid()}>\n                    <List.Header onClick={() => {\n                        Swal.fire({\n                            icon: 'info',\n                            text: `You have an appointment with Dr.${provider.last_name} on ${appoint.appoint_date}`\n                        }  \n                        )\n                    }\n                    }>{appoint.appoint_date}</List.Header>\n                     <List.Description>\n                      <Button size=\"mini\" className=\"teal\" key={uuid()} data-id={appoint.id} onClick={this.handleSetReschedule}>Reschedule</Button> \n                      <Button size=\"mini\" className=\"red\" key={uuid()} data-id={appoint.id} onClick={this.handleAppoDelete}>Cancel</Button>\n                     </List.Description>\n                 </List.Content>\n                </List.Item>\n            )\n    }\n    )\n}\n\nprovidersImg = () => {\n    const providers = [...this.props.user.providers]\n\n    const uniqueProviders = Array.from(new Set(providers.map(p => p.id))).map((id) => {\n        return providers.find((p) => {\n            return p.id === id})})\n\n    \n    return uniqueProviders.map((provider) => {\n    return <Image size=\"tiny\" onClick={this.pickProv} key={uuid()} data-id={provider.id} src={provider.img_url} alt={provider.last_name } circular />\n    }\n    )\n}\n\nconfirmAppo = () => {\n  \n    if(this.props.user.specialty){\n    this.props.createAppointment(this.props.date, this.props.pickedId, this.props.user.id)}\n    else{\n        this.props.createAppointment(this.props.date, this.props.user.id, this.props.pickedId)}    \n   \n}\n\npickProv = (evt) => {\n    this.props.setPickedUserId(evt.target.dataset.id)\n    \n}\n\nhandleAppoDelete = (evt) => {\n    this.props.deleteAppointment(evt.target.dataset.id)\n}\n\nhandleSetReschedule = (evt) => {\n   \n    this.setState({\n        ...this.state,\n        rescheduleClicked: true,\n        rescheduleAppoinId: evt.target.dataset.id\n    })\n}\n\nupdateAppointdate = () => {\n    \n    this.props.updateAppointment(this.state.rescheduleAppoinId, this.props.date)\n    this.setState({\n        ...this.state,\n        rescheduleClicked: false\n    })\n}\n\n\n\nproviderAppoLi = () => {\n    return this.props.user.client_appointments.map((appoint) => {\n       \n        let client = this.props.user.clients.find((c) => c.id === appoint.client_id)\n       console.log(client)\n        return (<List.Item key={uuid()}>\n                    <List.Content key={uuid()}>\n                        <List.Header>{appoint.appoint_date}</List.Header>\n                        <List.Description>\n                            <Button className=\"teal\" size=\"mini\" key={uuid()} data-id={appoint.id} onClick={this.handleSetReschedule}>Reschedule</Button> \n                            <Button className=\"red\" size=\"mini\" key={uuid()} data-id={appoint.id} onClick={this.handleAppoDelete}>Cancel</Button>\n                        </List.Description>\n                    </List.Content>\n                </List.Item>)\n        }\n        )\n}\n\nclientsImg = () => {\n    const clients = [...this.props.user.clients]\n    const uniqueClients = Array.from(new Set(clients.map(c => c.id))).map((id) => {\n        return clients.find((c) => {\n            return c.id === id})})\n    \n    \n    return uniqueClients.map((client) => {\n    return <Image size=\"tiny\" onClick={this.pickProv} key={uuid()} data-id={client.id} src={client.img_url} alt={client.last_name} circular/>\n    }\n    )\n}\n\nchangeUpdatedState = () => {\n    this.props.changeUpdateState()\n}\n\n\n\n    render(){\n       \n        return (\n           <div className=\"top div\">\n           {/* search bar */}\n           <SearcBar/>\n            <Grid relaxed columns={3}>\n                {/* beginning personal info */}\n               <Grid.Column>\n               <Segment>\n                    {this.state.clicked?\n                        <Segment.Group raised>\n                            <Segment onClick={this.handleClick} className=\"content\">\n                                <List.Item>\n                                 <List.Icon name='users'/>\n                                 <List.Content>Full name: {this.props.user.first_name} {this.props.user.last_name}</List.Content> \n                                 <List.Icon name=\"marker\"/>\n                                 <List.Content>Address: {this.props.user.address} </List.Content>\n                                 <List.Icon name=\"mail\"/>\n                                 <List.Content>Email: {this.props.user.email} </List.Content>\n                                 <List.Icon name=\"linkify\"/>\n                                 <List.Content>Contact: {this.props.user.phone_number} </List.Content> \n                               \n                                    <Segment>\n                                     <Link to=\"/edit\"><Button size=\"mini\" onClick={this.changeUpdatedState} className='teal'>Edit</Button></Link>\n                                     <Link to=\"/\"><Button size=\"mini\" onClick={this.handleDelete} className='red' >Delete</Button></Link>\n                                    </Segment>\n                                </List.Item>\n                            </Segment> \n                            <Grid.Row>\n                               <MapContainer address={this.props.user.address}/>\n                            </Grid.Row>\n                        </Segment.Group>\n                        \n                               \n                           \n                        \n                    :\n                        <Segment.Group  onClick={this.handleClick} raised>\n                            <Segment>\n                             <Image src={this.props.user.img_url} alt={this.props.user.username} size=\"medium\"/>\n                            </Segment>\n                            <Segment className=\"header\">Hi! Welcome {this.props.user.username}! </Segment>\n                            <Segment>\n                             <Link to=\"/\"><Button size=\"mini\" onClick={this.handleLogOutClick} className=\"teal\">Logout</Button></Link>\n                            </Segment>\n                        </Segment.Group>\n                    }\n                    \n                    </Segment>\n                    </Grid.Column>\n\n                {/* beginning of calender appointment making column */}\n                <Grid.Column>\n                    <Segment>\n                        Please click on the picture to choose\n                        <div className=\"ui tiny circular images\">\n                        {this.props.user.providers? this.providersImg():null}\n                        {this.props.user.clients? this.clientsImg():null}\n                        </div>\n                        <Segment>Please choose a date to schedule your appointment<Calendar /></Segment>\n                        \n                        <Segment><Button size=\"mini\" className=\"teal\" onClick={this.confirmAppo}>Schedule</Button></Segment>\n                    </Segment>\n               \n                </Grid.Column>\n                {/* beginning of apointment history */}\n                <Grid.Column>\n                    <Segment>\n                        <List>\n                           Appointments:\n                         {this.props.user.provider_appointments? this.appointmentLi(): null}\n                         {this.props.user.client_appointments? this.providerAppoLi(): null}\n                         </List>\n                         {this.state.rescheduleClicked? <Segment>Please select a date: <Calendar/><Button className=\"teal\" onClick={this.updateAppointdate}>confirm</Button></Segment>: null}\n                         \n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            </div>\n            \n            \n            \n            \n            \n            \n           \n           \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       user: state.user,\n       date: state.date,\n       pickedId: state.pickedId,\n       updated: state.updated,\n       source: state.source\n    }\n}\n\nexport default connect(mapStateToProps, {LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource})(Profile)"]},"metadata":{},"sourceType":"module"}