{"ast":null,"code":"import _objectSpread from \"/Users/guligenaaierken/Desktop/All projects/Final Project/Therappoint_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/guligenaaierken/Desktop/All projects/Final Project/Therappoint_frontend/src/components/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Search } from 'semantic-ui-react';\nimport { setSearchedUser, setSearchedValue } from '../reducer/actions';\nimport { Redirect } from 'react-router';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      results: [],\n      resultSelect: false\n    };\n\n    this.handleSearchChange = evt => {\n      let newVal = evt.target.value;\n      this.props.setSearchedValue(newVal);\n      this.handleSource();\n    };\n\n    this.handleSource = () => {\n      console.log(!this.props.user.specialty); // if(!this.props.user.specialty)\n      // if(this.props.source){\n      //     // different user would have different search result\n      //     if(this.props.user.specialty){\n      //         const newSource = this.props.source.map(object => {\n      //             /////avoid user has no first name bug\n      //             if (object.first_name && object.last_name) {\n      //                 return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase() + \" \" + object.username.toLowerCase(), ...object}\n      //             } else {\n      //                 return { title: object.username.toLowerCase(), ...object}\n      //             }\n      //         }).filter((obj) => {\n      //             return !obj.specialty\n      //         }\n      //         )\n      //         const results = newSource.filter((obj) => {\n      //              return obj.title.indexOf(this.props.searchedValue) !== -1 \n      //         })\n      //         this.setState({\n      //             ...this.state,\n      //             results: results\n      //         })}else{\n      //             const newSource = this.props.source.map(object => {\n      //                 /////avoid user has no first name bug\n      //                 if (object.first_name && object.last_name) {\n      //                     return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase() + \" \" + object.username.toLowerCase(), ...object}\n      //                 } else {\n      //                     return { title: object.username.toLowerCase(), ...object}\n      //                 }\n      //             }).filter((obj) => {\n      //                 return obj.specialty\n      //             }\n      //             )\n      //             const results = newSource.filter((obj) => {\n      //                  return obj.title.includes(this.props.searchedValue)\n      //             })\n      //             this.setState({\n      //                 ...this.state,\n      //                 results: results\n      //             })\n      //         }\n      //     }\n    };\n\n    this.handleResultSelect = evt => {\n      let searchedUser = [...this.state.results].find(user => {\n        return user.title === evt.target.innerText;\n      });\n      this.props.setSearchedUser(searchedUser);\n      localStorage.searched_id = searchedUser.id;\n      localStorage.searched_name = searchedUser.first_name + \" \" + searchedUser.last_name;\n      localStorage.searched_img = searchedUser.img_url;\n      localStorage.searched_address = searchedUser.address;\n      localStorage.searched_specialty = searchedUser.specialty;\n      localStorage.searched_board_certified = searchedUser.board_certified;\n      localStorage.searched_email = searchedUser.email;\n      localStorage.searched_phone_number = searchedUser.phone_number;\n      this.setState(_objectSpread({}, this.state, {\n        resultSelect: !this.state.resultSelect\n      }));\n    };\n  }\n\n  render() {\n    if (this.state.resultSelect === true) {\n      return React.createElement(Redirect, {\n        to: \"/portfolio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    } else {\n      return this.props.user.specialty ? React.createElement(Search, {\n        size: \"massive\",\n        className: \"tepish derizisi centered\",\n        onSearchChange: this.handleSearchChange,\n        placeholder: \"Find your client by name\",\n        results: this.state.results,\n        onResultSelect: this.handleResultSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }) : React.createElement(Search, {\n        size: \"massive\",\n        className: \"tepish derizisi centered\",\n        onSearchChange: this.handleSearchChange,\n        placeholder: \"Find your provider by name\",\n        results: this.state.results,\n        onResultSelect: this.handleResultSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    source: state.source,\n    searchedValue: state.searchedValue\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setSearchedUser,\n  setSearchedValue\n})(SearchBar);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/All projects/Final Project/Therappoint_frontend/src/components/SearchBar.js"],"names":["React","connect","Search","setSearchedUser","setSearchedValue","Redirect","SearchBar","Component","state","isLoading","results","resultSelect","handleSearchChange","evt","newVal","target","value","props","handleSource","console","log","user","specialty","handleResultSelect","searchedUser","find","title","innerText","localStorage","searched_id","id","searched_name","first_name","last_name","searched_img","img_url","searched_address","address","searched_specialty","searched_board_certified","board_certified","searched_email","email","searched_phone_number","phone_number","setState","render","mapStateToProps","source","searchedValue"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport {Search} from 'semantic-ui-react'\nimport { setSearchedUser, setSearchedValue} from '../reducer/actions'\nimport { Redirect } from 'react-router'\nimport './SearchBar.css'\n\nclass SearchBar extends React.Component {\n\n  state = {\n      isLoading: false,\n      results: [],\n      resultSelect: false\n\n  }\n\n\n\n  handleSearchChange = (evt) => {\n      \n      let newVal = evt.target.value\n     this.props.setSearchedValue(newVal)\n     \n     this.handleSource()\n     \n \n      \n        \n}\n\n\nhandleSource = () => {\n    console.log(!this.props.user.specialty)\n    // if(!this.props.user.specialty)\n    // if(this.props.source){\n    //     // different user would have different search result\n    //     if(this.props.user.specialty){\n    //         const newSource = this.props.source.map(object => {\n    //             /////avoid user has no first name bug\n    //             if (object.first_name && object.last_name) {\n    //                 return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase() + \" \" + object.username.toLowerCase(), ...object}\n    //             } else {\n    //                 return { title: object.username.toLowerCase(), ...object}\n\n    //             }\n    //         }).filter((obj) => {\n    //             return !obj.specialty\n    //         }\n    //         )\n            \n    //         const results = newSource.filter((obj) => {\n    //              return obj.title.indexOf(this.props.searchedValue) !== -1 \n                \n    //         })\n\n            \n\n    //         this.setState({\n    //             ...this.state,\n    //             results: results\n    //         })}else{\n    //             const newSource = this.props.source.map(object => {\n    //                 /////avoid user has no first name bug\n    //                 if (object.first_name && object.last_name) {\n    //                     return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase() + \" \" + object.username.toLowerCase(), ...object}\n    //                 } else {\n    //                     return { title: object.username.toLowerCase(), ...object}\n    \n    //                 }\n    //             }).filter((obj) => {\n    //                 return obj.specialty\n    //             }\n    //             )\n\n    //             const results = newSource.filter((obj) => {\n    //                  return obj.title.includes(this.props.searchedValue)\n                    \n    //             })\n               \n    //             this.setState({\n    //                 ...this.state,\n    //                 results: results\n    //             })\n\n    //         }\n    //     }\n    \n}\n\n\n  handleResultSelect = (evt) => {\n      \n       let searchedUser = [...this.state.results].find((user) => {\n           return user.title === evt.target.innerText\n       })\n\n    \n\n          this.props.setSearchedUser(searchedUser)\n         \n          localStorage.searched_id = searchedUser.id\n          localStorage.searched_name = searchedUser.first_name + \" \" + searchedUser.last_name\n          localStorage.searched_img = searchedUser.img_url\n          localStorage.searched_address = searchedUser.address\n          localStorage.searched_specialty = searchedUser.specialty\n          localStorage.searched_board_certified = searchedUser.board_certified\n          localStorage.searched_email = searchedUser.email\n          localStorage.searched_phone_number = searchedUser.phone_number\n\n      this.setState(\n          {...this.state, resultSelect: !this.state.resultSelect}\n      )\n  }\n  \n\n\nrender(){\n     \n     \n    if(this.state.resultSelect === true) {\n        return <Redirect to=\"/portfolio\"></Redirect>\n    }else{\n      return (this.props.user.specialty?\n        <Search  size=\"massive\" className=\"tepish derizisi centered\" onSearchChange={this.handleSearchChange} placeholder='Find your client by name' results={this.state.results} onResultSelect={this.handleResultSelect}/>\n        :\n        <Search  size=\"massive\" className=\"tepish derizisi centered\" onSearchChange={this.handleSearchChange} placeholder='Find your provider by name' results={this.state.results} onResultSelect={this.handleResultSelect}/>\n       )\n\n        \n\n\n}\n\n}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        source: state.source,\n        searchedValue: state.searchedValue\n    }\n}\n\n\nexport default connect(mapStateToProps, {setSearchedUser, setSearchedValue})(SearchBar)"]},"metadata":{},"sourceType":"module"}