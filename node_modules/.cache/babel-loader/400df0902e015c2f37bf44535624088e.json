{"ast":null,"code":"var _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Grid, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { searchSource } from '../reducer/actions';\n\nconst resultRenderer = ({\n  title\n}) => React.createElement(Label, {\n  content: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      results: [],\n      value: ''\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      console.log(e.target, {\n        value\n      });\n      this.setState({\n        isLoading: true,\n        value\n      });\n      this.props.searchSource();\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(this.state);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.props.source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      resultRenderer: resultRenderer\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchSource\n})(SearchBar);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js"],"names":["PropTypes","_","React","Component","Search","Grid","Label","connect","searchSource","resultRenderer","title","propTypes","string","description","SearchBar","state","isLoading","results","value","handleResultSelect","e","result","setState","handleSearchChange","console","log","target","props","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","source","render","debounce","leading","mapStateToProps","user"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search, Grid, Label } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\nimport {searchSource} from '../reducer/actions'\n\n\nconst resultRenderer = ({ title }) => <Label content={title} />\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\n\n\nclass SearchBar extends Component {\n  state = {\n    isLoading: false, \n    results: [], \n    value: ''\n  }\n\n\n  \n  \n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n  handleSearchChange = (e, { value }) => {\n      console.log(e.target, {value})\n    this.setState({ isLoading: true, value })\n    this.props.searchSource()\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(this.state)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.title)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.props.source, isMatch),\n      })\n    }, 300)\n  }\n\n  render() {\n   \n    const { isLoading, value, results } = this.state\n    \n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            resultRenderer={resultRenderer}\n            {...this.props}\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        source: state.source\n    }\n}\n\nexport default connect(mapStateToProps, {searchSource})(SearchBar)"]},"metadata":{},"sourceType":"module"}