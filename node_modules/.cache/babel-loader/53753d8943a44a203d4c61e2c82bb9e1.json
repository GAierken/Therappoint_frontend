{"ast":null,"code":"var _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/App.js\";\nimport React from 'react';\nimport logo from './logo.png';\nimport Login from './components/Login';\nimport SignUp from './components/Signup';\nimport Profile from './components/Profile';\nimport './App.css';\nimport Swal from 'sweetalert2';\nimport { connect } from 'react-redux';\nimport { setToken } from './reducer/actions';\nimport { Route, Switch } from 'react-router';\nimport Home from './Home';\nimport SignLog from './SignLog';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchPost = user => {\n      fetch('http://localhost:3000/users', {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(r => r.json()).then(data => {\n        if (data.errors) {\n          Swal.fire({\n            icon: 'warning',\n            title: 'Oops...',\n            text: data.errors\n          });\n        } else {\n          this.props.setToken(data.token, data.user_id);\n        }\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props.userChoice);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: logo,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/client\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/provider\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => React.createElement(SignUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), this.props.token !== '' ? React.createElement(Profile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setToken\n})(App);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/App.js"],"names":["React","logo","Login","SignUp","Profile","Swal","connect","setToken","Route","Switch","Home","SignLog","App","Component","fetchPost","user","fetch","method","headers","body","JSON","stringify","then","r","json","data","errors","fire","icon","title","text","props","token","user_id","render","console","log","userChoice","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.png'\nimport Login from './components/Login'\nimport SignUp from './components/Signup'\nimport Profile from './components/Profile'\nimport './App.css'\nimport Swal from 'sweetalert2'\nimport {connect} from 'react-redux'\nimport {setToken} from './reducer/actions'\nimport { Route, Switch } from 'react-router'\nimport Home from './Home'\nimport SignLog from './SignLog'\n\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  \n  \n  \n\n  fetchPost = (user) => {\n   \n    fetch('http://localhost:3000/users', {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body:  JSON.stringify(user)\n    })\n    .then(r => r.json())\n    .then(data => {\n      \n      if (data.errors) {\n        \n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        })\n      } else {\n        this.props.setToken(data.token, data.user_id)\n      \n        \n        \n      }\n    })\n  }\n  \n  \n  \n  render() {\n  console.log(this.props.userChoice)\n  return (\n    <div className=\"App\">\n     <img className=\"logo\" src={logo} alt=\"logo\"/>\n     \n     <Switch>\n       <Route exact path=\"/\" component={ Home } />\n       <Route exact path=\"/client\" component={ Home } />\n       <Route exact path=\"/provider\" component={ Home } />\n\n\n       <Route exact path='/signup' render={() => <SignUp/>} />\n       <Route exact path='/login' render={() => <Login/>} />\n\n\n     \n     {this.props.token !== ''? <Profile/> : null}\n     </Switch>\n    </div>\n  )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  \n  return {\n    token: state.token\n  }\n}\n\nexport default connect(mapStateToProps, {setToken} )(App);\n"]},"metadata":{},"sourceType":"module"}