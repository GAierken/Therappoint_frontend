{"ast":null,"code":"import _objectSpread from \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Profile.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Profile.css';\nimport { Link } from 'react-router-dom';\nimport { LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource } from '../reducer/actions';\nimport uuid from 'uuid';\nimport Calendar from './Calendar';\nimport SearcBar from './SearchBar';\nimport MapContainer from './MapContainer';\nimport { Segment, Button, List, Image, Grid, GridColumn } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      rescheduleClicked: false,\n      rescheduleAppoinId: ''\n    };\n\n    this.handleLogOutClick = () => {\n      localStorage.clear();\n      this.props.LogOut();\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.handleDelete = () => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('id');\n      this.props.deleteUser(this.props.user);\n    };\n\n    this.appointmentLi = () => {\n      return this.props.user.provider_appointments.map(appoint => {\n        let provider = this.props.user.providers.find(p => p.id === appoint.provider_id);\n        return React.createElement(List.Item, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          onMouseEnter: () => {\n            console.log('working');\n          },\n          onClick: () => {\n            Swal.fire({\n              icon: 'info',\n              text: `You have an appointment with ${provider.last_name} on ${appoint.appoint_date}.`,\n              imageUrl: `${provider.img_url}`,\n              imageWidth: 200,\n              imageHeight: 200,\n              imageAlt: 'Custom image',\n              position: 'top-end',\n              background: '#b2eee6'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, appoint.appoint_date), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"mini\",\n          className: \"teal\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleSetReschedule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Reschedule\"), React.createElement(Button, {\n          size: \"mini\",\n          id: \"appocancel\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleAppoDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Cancel\"))));\n      });\n    };\n\n    this.providersImg = () => {\n      const providers = [...this.props.user.providers];\n      const uniqueProviders = Array.from(new Set(providers.map(p => p.id))).map(id => {\n        return providers.find(p => {\n          return p.id === id;\n        });\n      });\n      return uniqueProviders.map(provider => {\n        return React.createElement(Image, {\n          className: \"turkum rasimlar\",\n          size: \"tiny\",\n          onClick: this.pickProv,\n          key: uuid(),\n          \"data-id\": provider.id,\n          src: provider.img_url,\n          alt: provider.last_name,\n          circular: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.confirmAppo = () => {\n      if (this.props.user.specialty) {\n        this.props.createAppointment(this.props.date, this.props.pickedId, this.props.user.id);\n      } else {\n        this.props.createAppointment(this.props.date, this.props.user.id, this.props.pickedId);\n      }\n    };\n\n    this.pickProv = evt => {\n      evt.target.style.opacity = 1;\n      this.props.setPickedUserId(evt.target.dataset.id);\n    };\n\n    this.handleAppoDelete = evt => {\n      this.props.deleteAppointment(evt.target.dataset.id);\n    };\n\n    this.handleSetReschedule = evt => {\n      this.setState(_objectSpread({}, this.state, {\n        rescheduleClicked: true,\n        rescheduleAppoinId: evt.target.dataset.id\n      }));\n    };\n\n    this.updateAppointdate = () => {\n      this.props.updateAppointment(this.state.rescheduleAppoinId, this.props.date);\n      this.setState(_objectSpread({}, this.state, {\n        rescheduleClicked: false\n      }));\n    };\n\n    this.providerAppoLi = () => {\n      return this.props.user.client_appointments.map(appoint => {\n        let client = this.props.user.clients.find(c => c.id === appoint.client_id);\n        return React.createElement(List.Item, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          onClick: () => {\n            Swal.fire({\n              icon: 'info',\n              text: `You have an appointment with ${client.last_name} on ${appoint.appoint_date}.`,\n              imageUrl: `${client.img_url}`,\n              imageWidth: 200,\n              imageHeight: 200,\n              imageAlt: 'Custom image',\n              position: 'top-end',\n              background: '#b2eee6'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, appoint.appoint_date), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"teal\",\n          size: \"mini\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleSetReschedule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Reschedule\"), React.createElement(Button, {\n          id: \"appocancel02\",\n          size: \"mini\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleAppoDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Cancel\"))));\n      });\n    };\n\n    this.clientsImg = () => {\n      const clients = [...this.props.user.clients];\n      const uniqueClients = Array.from(new Set(clients.map(c => c.id))).map(id => {\n        return clients.find(c => {\n          return c.id === id;\n        });\n      });\n      return uniqueClients.map(client => {\n        return React.createElement(Image, {\n          className: \"turkum rasimlar\",\n          size: \"tiny\",\n          onClick: this.pickProv,\n          key: uuid(),\n          \"data-id\": client.id,\n          src: client.img_url,\n          alt: client.last_name,\n          circular: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.changeUpdatedState = () => {\n      this.props.changeUpdateState();\n    };\n\n    this.handleNoAppo = () => {\n      if (this.props.provider_appointments || this.props.client_appointments) {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(GridColumn, {\n          className: \"provider img text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"Your Appointments:\"));\n      } else {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(GridColumn, {\n          className: \"provider img text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"Please make an appointment\"));\n      }\n    };\n\n    this.handleNoPickedUser = () => {\n      if (this.props.providers === [] || this.props.clients === []) {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(GridColumn, {\n          className: \"provider img text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Please find your providers or clients\"));\n      } else {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(GridColumn, {\n          className: \"provider img text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Please click on picture to choose\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.newSource();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"top div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(SearcBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.clicked ? React.createElement(Segment.Group, {\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      onClick: this.handleClick,\n      className: \"content userInfo jik\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(List.Icon, {\n      name: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Full name: \", this.props.user.first_name, \" \", this.props.user.last_name), React.createElement(List.Icon, {\n      name: \"marker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Address: \", this.props.user.address, \" \"), React.createElement(List.Icon, {\n      name: \"mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Email: \", this.props.user.email, \" \"), React.createElement(List.Icon, {\n      name: \"linkify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Contact: \", this.props.user.phone_number, \" \")), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.changeUpdatedState,\n      className: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.handleDelete,\n      className: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Delete\")))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      address: this.props.user.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))) : React.createElement(Segment.Group, {\n      onClick: this.handleClick,\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: this.props.user.img_url,\n      alt: this.props.user.username,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      className: \"welcome user bat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Hi! Welcome \", this.props.user.username, \"! \"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.handleLogOutClick,\n      className: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Logout\")))))))), React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.handleNoPickedUser(), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui tiny circular images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.props.user.providers ? this.providersImg() : null, this.props.user.clients ? this.clientsImg() : null))), React.createElement(Segment, {\n      className: \"choose date text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Please choose a date to schedule your appointment\", React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"mini\",\n      className: \"teal\",\n      onClick: this.confirmAppo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Schedule\")))))), React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, this.handleNoAppo(), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.props.user.provider_appointments ? this.appointmentLi() : null, this.props.user.client_appointments ? this.providerAppoLi() : null), this.state.rescheduleClicked ? React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Please select a date: \", React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"mini\",\n      className: \"teal\",\n      onClick: this.updateAppointdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"confirm\"), React.createElement(Button, {\n      size: \"mini\",\n      color: \"blue\",\n      onClick: () => {\n        this.setState({\n          rescheduleClicked: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Back\"))) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    date: state.date,\n    pickedId: state.pickedId,\n    updated: state.updated,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps, {\n  LogOut,\n  deleteUser,\n  setPickedUserId,\n  createAppointment,\n  deleteAppointment,\n  updateAppointment,\n  authUser,\n  changeUpdateState,\n  newSource\n})(Profile);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Profile.js"],"names":["React","connect","Link","LogOut","deleteUser","setPickedUserId","createAppointment","deleteAppointment","updateAppointment","authUser","changeUpdateState","newSource","uuid","Calendar","SearcBar","MapContainer","Segment","Button","List","Image","Grid","GridColumn","Swal","Profile","Component","state","clicked","rescheduleClicked","rescheduleAppoinId","handleLogOutClick","localStorage","clear","props","handleClick","setState","handleDelete","removeItem","user","appointmentLi","provider_appointments","map","appoint","provider","providers","find","p","id","provider_id","console","log","fire","icon","text","last_name","appoint_date","imageUrl","img_url","imageWidth","imageHeight","imageAlt","position","background","handleSetReschedule","handleAppoDelete","providersImg","uniqueProviders","Array","from","Set","pickProv","confirmAppo","specialty","date","pickedId","evt","target","style","opacity","dataset","updateAppointdate","providerAppoLi","client_appointments","client","clients","c","client_id","clientsImg","uniqueClients","changeUpdatedState","handleNoAppo","handleNoPickedUser","componentDidMount","render","first_name","address","email","phone_number","username","mapStateToProps","updated","source"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport './Profile.css'\nimport {Link} from 'react-router-dom'\nimport { LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource } from '../reducer/actions'\nimport uuid from 'uuid'\nimport Calendar from './Calendar'\nimport SearcBar from './SearchBar'\nimport MapContainer from './MapContainer'\nimport { Segment, Button, List, Image, Grid, GridColumn } from 'semantic-ui-react';\nimport Swal from 'sweetalert2'\n\n\nclass Profile extends React.Component {\n\n state={\n     clicked: false,\n     rescheduleClicked: false,\n     rescheduleAppoinId: ''\n }\n\n componentDidMount() {\n   this.props.newSource()\n }\n\nhandleLogOutClick = () => {\n    \n    localStorage.clear()\n    \n    this.props.LogOut()\n  \n}\n\nhandleClick = () => {\n    this.setState({\n        clicked: !this.state.clicked\n    })\n}\n\n\nhandleDelete = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('id')\n    this.props.deleteUser(this.props.user)\n}\n\nappointmentLi = () => {\n  \n    return this.props.user.provider_appointments.map((appoint) => {\n           let provider = this.props.user.providers.find((p) => p.id === appoint.provider_id)\n           \n    return (\n                <List.Item key={uuid()}>\n                 <List.Content key={uuid()}>\n                    <List.Header onMouseEnter={() => {\n                        console.log('working')\n                    }\n                    } onClick={() => {\n                        Swal.fire({\n                            icon: 'info',\n                            text: `You have an appointment with ${provider.last_name} on ${appoint.appoint_date}.`,\n                            imageUrl: `${provider.img_url}`,\n                            imageWidth: 200,\n                            imageHeight: 200,\n                            imageAlt: 'Custom image',\n                            position: 'top-end',\n                            background: '#b2eee6'\n                        }  \n                        )\n                    }\n                    }>{appoint.appoint_date}</List.Header>\n                     <List.Description>\n                      <Button size=\"mini\" className=\"teal\" key={uuid()} data-id={appoint.id} onClick={this.handleSetReschedule}>Reschedule</Button> \n                      <Button size=\"mini\" id=\"appocancel\" key={uuid()} data-id={appoint.id} onClick={this.handleAppoDelete}>Cancel</Button>\n                     </List.Description>\n                 </List.Content>\n                </List.Item>\n            )\n    }\n    )\n}\n\nprovidersImg = () => {\n    const providers = [...this.props.user.providers]\n\n    const uniqueProviders = Array.from(new Set(providers.map(p => p.id))).map((id) => {\n        return providers.find((p) => {\n            return p.id === id})})\n\n    \n    return uniqueProviders.map((provider) => {\n    return <Image  className=\"turkum rasimlar\"size=\"tiny\" onClick={this.pickProv} key={uuid()} data-id={provider.id} src={provider.img_url} alt={provider.last_name } circular />\n    }\n    )\n}\n\n\n\nconfirmAppo = () => {\n  \n    if(this.props.user.specialty){\n    this.props.createAppointment(this.props.date, this.props.pickedId, this.props.user.id)}\n    else{\n        this.props.createAppointment(this.props.date, this.props.user.id, this.props.pickedId)}    \n   \n}\n\npickProv = (evt) => {\n   evt.target.style.opacity = 1\n    this.props.setPickedUserId(evt.target.dataset.id)\n    \n}\n\nhandleAppoDelete = (evt) => {\n    this.props.deleteAppointment(evt.target.dataset.id)\n}\n\nhandleSetReschedule = (evt) => {\n   \n    this.setState({\n        ...this.state,\n        rescheduleClicked: true,\n        rescheduleAppoinId: evt.target.dataset.id\n    })\n}\n\nupdateAppointdate = () => {\n    \n    this.props.updateAppointment(this.state.rescheduleAppoinId, this.props.date)\n    this.setState({\n        ...this.state,\n        rescheduleClicked: false\n    })\n}\n\n\n\nproviderAppoLi = () => {\n    return this.props.user.client_appointments.map((appoint) => {\n       \n        let client = this.props.user.clients.find((c) => c.id === appoint.client_id)\n        return (<List.Item key={uuid()}>\n                    <List.Content key={uuid()}>\n                        <List.Header onClick={() => {\n                        Swal.fire({\n                            icon: 'info',\n                            text: `You have an appointment with ${client.last_name} on ${appoint.appoint_date}.`,\n                            imageUrl: `${client.img_url}`,\n                            imageWidth: 200,\n                            imageHeight: 200,\n                            imageAlt: 'Custom image',\n                            position: 'top-end',\n                            background: '#b2eee6'\n                     \n                        }  \n                        )\n                    }\n                    }>{appoint.appoint_date}</List.Header>\n                        <List.Description>\n                            <Button className=\"teal\" size=\"mini\" key={uuid()} data-id={appoint.id} onClick={this.handleSetReschedule}>Reschedule</Button> \n                            <Button id=\"appocancel02\" size=\"mini\" key={uuid()} data-id={appoint.id} onClick={this.handleAppoDelete}>Cancel</Button>\n                        </List.Description>\n                    </List.Content>\n                </List.Item>)\n        }\n        )\n}\n\nclientsImg = () => {\n    const clients = [...this.props.user.clients]\n    const uniqueClients = Array.from(new Set(clients.map(c => c.id))).map((id) => {\n        return clients.find((c) => {\n            return c.id === id})})\n    \n    \n    return uniqueClients.map((client) => {\n    return <Image className=\"turkum rasimlar\" size=\"tiny\"  onClick={this.pickProv} key={uuid()} data-id={client.id} src={client.img_url} alt={client.last_name} circular/>\n    }\n    )\n}\n\nchangeUpdatedState = () => {\n    this.props.changeUpdateState()\n}\n\nhandleNoAppo = () => {\n    if(this.props.provider_appointments || this.props.client_appointments){\n        return(\n            <Grid><GridColumn className=\"provider img text\">Your Appointments:</GridColumn></Grid>\n        )\n    }else{\n        return(\n            <Grid><GridColumn className=\"provider img text\">Please make an appointment</GridColumn></Grid>\n        )\n    }\n}\n\n\nhandleNoPickedUser = () => {\n    if(this.props.providers === [] || this.props.clients === []){\n        return(\n            <Grid><GridColumn className=\"provider img text\">Please find your providers or clients</GridColumn></Grid>\n        )\n    }else{\n        return(\n            <Grid><GridColumn className=\"provider img text\">Please click on picture to choose</GridColumn></Grid>\n        )\n    }\n}\n\n\n\n    render(){\n       \n        return (\n           <div className=\"top div\">\n           {/* search bar */}\n           <SearcBar/>\n            <Grid relaxed >\n                {/* beginning personal info */}\n               <Grid.Column width={4}>\n               <Segment>\n                    {this.state.clicked?\n                        <Segment.Group raised>\n                            <Segment onClick={this.handleClick} className=\"content userInfo jik\">\n                                <List.Item>\n                                 <List.Icon name='users'/>\n                                 <List.Content>Full name: {this.props.user.first_name} {this.props.user.last_name}</List.Content> \n                                 <List.Icon name=\"marker\"/>\n                                 <List.Content>Address: {this.props.user.address} </List.Content>\n                                 <List.Icon name=\"mail\"/>\n                                 <List.Content>Email: {this.props.user.email} </List.Content>\n                                 <List.Icon name=\"linkify\"/>\n                                 <List.Content>Contact: {this.props.user.phone_number} </List.Content> \n                                 </List.Item>\n                                    <Segment>\n                                      <Grid>\n                                          <Grid.Column>\n                                            <Link to=\"/edit\"><Button size=\"mini\" onClick={this.changeUpdatedState} className='blue'>Edit</Button></Link>\n                                            <Link to=\"/\"><Button size=\"mini\" onClick={this.handleDelete} className='red' >Delete</Button></Link>\n                                          </Grid.Column>\n                                      </Grid>\n                                    </Segment>\n                                \n                            </Segment> \n                            \n                            <Grid.Column>\n                               <MapContainer address={this.props.user.address}/>\n                            </Grid.Column>\n                            \n                        </Segment.Group>\n                    :\n                        <Segment.Group  onClick={this.handleClick} raised>\n                            <Segment>\n                             <Image src={this.props.user.img_url} alt={this.props.user.username} size=\"medium\"/>\n                            </Segment>\n                            <Segment className=\"welcome user bat\">Hi! Welcome {this.props.user.username}! </Segment>\n                            <Segment>\n                                <Grid>\n                                    <Grid.Column>\n                                        <Link to=\"/\"><Button size=\"mini\" onClick={this.handleLogOutClick} className=\"grey\">Logout</Button></Link>\n                                    </Grid.Column>\n                                </Grid>\n                            </Segment>\n                        </Segment.Group>\n                    }\n                    \n                    </Segment>\n                    </Grid.Column>\n\n                {/* beginning of calender appointment making column */}\n                <Grid.Column width={6}>\n                    <Segment>\n                        {this.handleNoPickedUser()}\n                        <Grid>\n                            <Grid.Column>\n\n                            <div className=\"ui tiny circular images\">\n                            {this.props.user.providers? this.providersImg():null}\n                            {this.props.user.clients? this.clientsImg():null}\n                            </div>\n                            </Grid.Column>\n                        </Grid>\n                        <Segment className=\"choose date text\" >Please choose a date to schedule your appointment\n                            <Grid><Grid.Column><Calendar /><Button size=\"mini\" className=\"teal\" onClick={this.confirmAppo}>Schedule</Button></Grid.Column></Grid>\n                        </Segment>\n                    </Segment>\n                </Grid.Column>\n                {/* beginning of apointment history */}\n                <Grid.Column width={6}>\n                    <Segment>\n                        {this.handleNoAppo()}\n                        <List>\n                         {this.props.user.provider_appointments? this.appointmentLi(): null}\n                         {this.props.user.client_appointments? this.providerAppoLi(): null}\n                         </List>\n                         {this.state.rescheduleClicked? <Grid><Segment>Please select a date: <Calendar/><Button size=\"mini\" className=\"teal\" onClick={this.updateAppointdate}>confirm</Button><Button size=\"mini\" color=\"blue\" onClick={() => {\n                             this.setState({\n                                 rescheduleClicked: false\n                             })\n                         }\n                         }>Back</Button></Segment></Grid>: null}\n                         \n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            </div>\n            \n            \n            \n            \n            \n            \n           \n           \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       user: state.user,\n       date: state.date,\n       pickedId: state.pickedId,\n       updated: state.updated,\n       source: state.source\n    }\n}\n\nexport default connect(mapStateToProps, {LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource})(Profile)"]},"metadata":{},"sourceType":"module"}