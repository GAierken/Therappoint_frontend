{"ast":null,"code":"import Swal from 'sweetalert2';\nexport const setCategory = category => {\n  return {\n    type: \"SET_CATEGORY\",\n    category: category\n  };\n};\nexport const setToken = (token, id) => {\n  return {\n    type: 'SET_TOKEN',\n    token: token,\n    id: id\n  };\n};\nexport const setUser = user => {\n  return {\n    type: \"SET_USER\",\n    user: user\n  };\n};\nexport const createUser = user => {\n  return dispatch => {\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/json\",\n        'accept': \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        localStorage.token = data.token;\n        localStorage.id = data.user_id;\n        dispatch(setToken(data.token, data.user_id));\n        dispatch(authUser(data.token, data.user_id));\n      }\n    });\n  };\n};\nexport const loginUser = user => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/login\", {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        localStorage.token = data.token;\n        localStorage.id = data.id;\n        dispatch(setToken(data.token, data.id));\n        dispatch(authUser(data.token, data.id));\n      }\n    });\n  };\n};\nexport const authUser = (token, id) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/users/${id}`, {\n      headers: {\n        \"Authorization\": token\n      }\n    }).then(r => r.json()).then(data => {\n      dispatch(setUser(data));\n      localStorage.first_name = data.first_name;\n      localStorage.last_name = data.last_name;\n      localStorage.username = data.username;\n      localStorage.address = data.address;\n      localStorage.email = data.email;\n      localStorage.phone_number = data.phone_number;\n      localStorage.img_url = data.img_url;\n      localStorage.specialty = data.specialty;\n      localStorage.board_certified = data.board_certified;\n\n      if (localStorage.specialty === \"null\") {\n        localStorage.providers_appointments = JSON.stringify(data.provider_appointments);\n        localStorage.providers = JSON.stringify(data.providers);\n      } else {\n        localStorage.client_appointments = JSON.stringify(data.client_appointments);\n        localStorage.clients = JSON.stringify(data.clients);\n      }\n    });\n  };\n};\nexport const LogOut = () => {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\nexport const updateSuccess = () => {\n  return {\n    type: 'UPDATE_SUCCESS',\n    updated: true\n  };\n};\nexport const updateUser = user => {\n  return dispatch => {\n    fetch(`http://localhost:3000/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        dispatch(setUser(data));\n      }\n    });\n  };\n};\nexport const deleteUser = user => {\n  return dispatch => {\n    fetch(`http://localhost:3000/users/${user.id}`, {\n      method: 'DELETE'\n    }).then(r => r.json()).then(data => {\n      localStorage.clear();\n      Swal.fire({\n        icon: 'success',\n        title: 'Sad to see you go!',\n        text: 'User is deleted!'\n      });\n    });\n  };\n};\nexport const setDate = date => {\n  return {\n    type: 'DATE',\n    date: date\n  };\n};\nexport const setPickedUserId = id => {\n  return {\n    type: 'PICKED_USER',\n    pickedId: id\n  };\n};\nexport const createAppointment = (date, userId01, userId02) => {\n  return dispatch => {\n    fetch('http://localhost:3000/appointments', {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        client_id: userId01,\n        provider_id: userId02,\n        appoint_date: date\n      })\n    }).then(r => r.json()).then(data => {\n      console.log(data);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/reducer/actions.js"],"names":["Swal","setCategory","category","type","setToken","token","id","setUser","user","createUser","dispatch","fetch","method","headers","body","JSON","stringify","then","r","json","data","errors","fire","icon","title","text","localStorage","user_id","authUser","loginUser","first_name","last_name","username","address","email","phone_number","img_url","specialty","board_certified","providers_appointments","provider_appointments","providers","client_appointments","clients","LogOut","updateSuccess","updated","updateUser","deleteUser","clear","setDate","date","setPickedUserId","pickedId","createAppointment","userId01","userId02","client_id","provider_id","appoint_date","console","log"],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2'\n\nexport const setCategory = (category) => {\n    return {\n        type: \"SET_CATEGORY\",\n        category: category\n    }\n    \n}\n\nexport const setToken = (token, id) => {\n    return {\n        type: 'SET_TOKEN',\n        token: token,\n        id: id\n    }\n}\n\n\nexport const setUser = (user) => {\n    return {\n        type: \"SET_USER\",\n        user: user\n    }\n}\n\nexport const createUser = (user) => {\n    \n    return (dispatch) => {\n        fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/json\",\n                'accept': \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n        .then(r => r.json())\n        .then(data => {\n            if (data.errors) {\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Oops...',\n                    text: data.errors\n                  })\n            } else {\n                localStorage.token = data.token\n                localStorage.id = data.user_id\n               \n                dispatch(setToken(data.token, data.user_id))\n                dispatch(authUser(data.token, data.user_id))\n            }\n            \n        })\n    }\n}\n\nexport const loginUser = (user) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:3000/login\", {\n           method: 'POST',\n           headers: {\n               \"content-type\": \"application/json\",\n               \"accept\": \"application/json\"\n           },\n           body: JSON.stringify(user)\n       })\n       .then(r => r.json())\n       .then(data => {\n           if (data.errors) {\n            Swal.fire({\n                icon: 'warning',\n                title: 'Oops...',\n                text: data.errors\n              })\n           } else {\n               \n               localStorage.token = data.token\n               localStorage.id = data.id\n               \n               dispatch(setToken(data.token, data.id))\n               dispatch(authUser(data.token, data.id))\n                \n               \n           }\n\n          \n       })\n    }\n}\n\n\nexport const authUser = (token, id) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/users/${id}`,{\n            headers: {\n                \"Authorization\": token\n            }\n        })\n        .then(r => r.json())\n        .then(data => {\n            dispatch(setUser(data))\n            localStorage.first_name = data.first_name\n            localStorage.last_name = data.last_name\n            localStorage.username = data.username\n            localStorage.address = data.address\n            localStorage.email = data.email\n            localStorage.phone_number = data.phone_number\n            localStorage.img_url = data.img_url\n            localStorage.specialty = data.specialty\n            localStorage.board_certified = data.board_certified\n            \n            if (localStorage.specialty === \"null\") {\n                        localStorage.providers_appointments = JSON.stringify(data.provider_appointments)\n                        localStorage.providers = JSON.stringify(data.providers)\n            }else{\n                        localStorage.client_appointments = JSON.stringify(data.client_appointments)\n                        localStorage.clients = JSON.stringify(data.clients)\n            }\n        })\n    }\n}\n\nexport const LogOut = () => {\n    return {\n        type: \"LOG_OUT\"\n    }\n}\n\nexport const updateSuccess = () => {\n     return {\n         type: 'UPDATE_SUCCESS',\n         updated: true\n     }\n}\n\nexport const updateUser = (user) => {\n  \n    return (dispatch) => {\n        fetch(`http://localhost:3000/users/${user.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body:  JSON.stringify(user)\n        })\n        .then(r => r.json())\n        .then(data => \n            {\n                if (data.errors) {\n                    Swal.fire({\n                        icon: 'warning',\n                        title: 'Oops...',\n                        text: data.errors\n                      })\n                } else {\n                   dispatch(setUser(data))\n                 \n                }\n                \n            }\n            \n        )\n    }\n}\n\n\nexport const deleteUser = (user) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/users/${user.id}`,{\n            method: 'DELETE'\n        })\n        .then(r => r.json())\n        .then(data => {\n           localStorage.clear()\n            Swal.fire({\n                icon: 'success',\n                title: 'Sad to see you go!',\n                text: 'User is deleted!'\n              })\n        })\n    }\n\n\n}\n\n\nexport const setDate = (date) => {\n    return {\n        type: 'DATE',\n        date: date\n    }\n}\n\nexport const setPickedUserId = (id) => {\n    return {\n        type: 'PICKED_USER',\n        pickedId: id\n    }\n}\n\nexport const createAppointment = (date, userId01, userId02) => {\n    return (dispatch) => {\n        fetch('http://localhost:3000/appointments', {\n            method: 'POST',\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                client_id: userId01,\n                provider_id: userId02,\n                appoint_date: date\n            })\n        })\n        .then(r => r.json())\n        .then(data => {\n            console.log(data)\n           \n        })\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}