{"ast":null,"code":"import Swal from 'sweetalert2';\nexport const setToken = (token, id) => {\n  return {\n    type: 'SET_TOKEN',\n    token: token,\n    id: id\n  };\n};\nexport const setUser = user => {\n  return {\n    type: \"SET_USER\",\n    user: user\n  };\n};\nexport const createUser = user => {\n  return dispatch => {\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/json\",\n        'accept': \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        localStorage.token = data.token;\n        localStorage.id = data.user_id;\n        dispatch(setToken(data.token, data.user_id));\n      }\n    });\n  };\n};\nexport const authUser = (token, id) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/users/${id}`, {\n      headers: {\n        \"Authorization\": token\n      }\n    }).then(r => r.json()).then(data => {\n      dispatch(setUser(data));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/reducer/actions.js"],"names":["Swal","setToken","token","id","type","setUser","user","createUser","dispatch","fetch","method","headers","body","JSON","stringify","then","r","json","data","errors","fire","icon","title","text","localStorage","user_id","authUser"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAE,WADH;AAEHF,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,EAAE,EAAEA;AAHD,GAAP;AAKH,CANM;AASP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACHF,IAAAA,IAAI,EAAE,UADH;AAEHE,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,UAAU,GAAID,IAAD,IAAU;AAEhC,SAAQE,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAN2B,KAAhC,CAAL,CAQCS,IARD,CAQMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARX,EASCF,IATD,CASMG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,MAAT,EAAiB;AACbnB,QAAAA,IAAI,CAACoB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAEL,IAAI,CAACC;AAHL,SAAV;AAKH,OAND,MAMO;AACHK,QAAAA,YAAY,CAACtB,KAAb,GAAqBgB,IAAI,CAAChB,KAA1B;AACAsB,QAAAA,YAAY,CAACrB,EAAb,GAAkBe,IAAI,CAACO,OAAvB;AAEAjB,QAAAA,QAAQ,CAACP,QAAQ,CAACiB,IAAI,CAAChB,KAAN,EAAagB,IAAI,CAACO,OAAlB,CAAT,CAAR;AACH;AAEJ,KAvBD;AAwBH,GAzBD;AA0BH,CA5BM;AA+BP,OAAO,MAAMC,QAAQ,GAAG,CAACxB,KAAD,EAAQC,EAAR,KAAe;AACnC,SAAQK,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,+BAA8BN,EAAG,EAAnC,EAAqC;AACtCQ,MAAAA,OAAO,EAAE;AACL,yBAAiBT;AADZ;AAD6B,KAArC,CAAL,CAKCa,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMG,IAAI,IAAI;AACVV,MAAAA,QAAQ,CAACH,OAAO,CAACa,IAAD,CAAR,CAAR;AACH,KARD;AASH,GAVD;AAWH,CAZM","sourcesContent":["import Swal from 'sweetalert2'\n\nexport const setToken = (token, id) => {\n    return {\n        type: 'SET_TOKEN',\n        token: token,\n        id: id\n    }\n}\n\n\nexport const setUser = (user) => {\n    return {\n        type: \"SET_USER\",\n        user: user\n    }\n}\n\nexport const createUser = (user) => {\n    \n    return (dispatch) => {\n        fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/json\",\n                'accept': \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n        .then(r => r.json())\n        .then(data => {\n            if (data.errors) {\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Oops...',\n                    text: data.errors\n                  })\n            } else {\n                localStorage.token = data.token\n                localStorage.id = data.user_id\n               \n                dispatch(setToken(data.token, data.user_id))\n            }\n            \n        })\n    }\n}\n\n\nexport const authUser = (token, id) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/users/${id}`,{\n            headers: {\n                \"Authorization\": token\n            }\n        })\n        .then(r => r.json())\n        .then(data => {\n            dispatch(setUser(data))\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}