{"ast":null,"code":"import Swal from 'sweetalert2';\nexport const setCategory = category => {\n  return {\n    type: \"SET_CATEGORY\",\n    category: category\n  };\n};\nexport const setToken = (token, id) => {\n  return {\n    type: 'SET_TOKEN',\n    token: token,\n    id: id\n  };\n};\nexport const setUser = user => {\n  return {\n    type: \"SET_USER\",\n    user: user\n  };\n};\nexport const createUser = user => {\n  return dispatch => {\n    fetch('https://peaceful-atoll-37638.herokuapp.com/users', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/json\",\n        'accept': \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        localStorage.token = data.token;\n        localStorage.id = data.user_id;\n        dispatch(setToken(data.token, data.user_id));\n        dispatch(authUser(localStorage.token, localStorage.id));\n      }\n    });\n  };\n};\nexport const loginUser = user => {\n  return dispatch => {\n    fetch(\"https://peaceful-atoll-37638.herokuapp.com/login\", {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        localStorage.token = data.token;\n        localStorage.id = data.id;\n        dispatch(setToken(data.token, data.id));\n        dispatch(authUser(localStorage.token, localStorage.id));\n      }\n    });\n  };\n};\nexport const authUser = (token, id) => {\n  return dispatch => {\n    fetch(`https://peaceful-atoll-37638.herokuapp.com/users/${id}`, {\n      headers: {\n        \"Authorization\": token\n      }\n    }).then(r => r.json()).then(data => {\n      dispatch(setUser(data));\n    });\n  };\n};\nexport const LogOut = () => {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\nexport const updateSuccess = () => {\n  return {\n    type: 'UPDATE_SUCCESS',\n    updated: true\n  };\n};\nexport const changeUpdateState = () => {\n  return {\n    type: 'CHANGE_UPDATE_STATE',\n    updated: false\n  };\n};\nexport const updateUser = user => {\n  return dispatch => {\n    fetch(`https://peaceful-atoll-37638.herokuapp.com/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        dispatch(setUser(data));\n      }\n    });\n  };\n};\nexport const deleteUser = user => {\n  return dispatch => {\n    fetch(`https://peaceful-atoll-37638.herokuapp.com/users/${user.id}`, {\n      method: 'DELETE'\n    }).then(r => r.json()).then(data => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('id');\n      Swal.fire({\n        icon: 'success',\n        title: 'Sad to see you go!',\n        text: 'User is deleted!'\n      });\n      dispatch(setToken(null, null));\n      dispatch(authUser(null, null));\n    });\n  };\n};\nexport const setDate = date => {\n  return {\n    type: 'DATE',\n    date: date\n  };\n};\nexport const setPickedUserId = id => {\n  return {\n    type: 'PICKED_USER',\n    pickedId: id\n  };\n};\nexport const createAppointment = (date, userId01, userId02) => {\n  return dispatch => {\n    fetch('https://peaceful-atoll-37638.herokuapp.com/appointments', {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        client_id: userId01,\n        provider_id: userId02,\n        appoint_date: date\n      })\n    }).then(r => r.json()).then(data => {\n      if (data.errors) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: data.errors\n        });\n      } else {\n        Swal.fire({\n          icon: 'success',\n          title: `Appointment for ${data.appoint_date} is scheduled!`\n        });\n        dispatch(authUser(localStorage.token, localStorage.id));\n      }\n    });\n  };\n};\nexport const deleteAppointment = id => {\n  return dispatch => {\n    fetch(`https://peaceful-atoll-37638.herokuapp.com/appointments/${id}`, {\n      method: \"DELETE\"\n    }).then(r => r.json()).then(data => {\n      Swal.fire({\n        icon: 'success',\n        text: 'Appointment is canceled!'\n      });\n      dispatch(authUser(localStorage.token, localStorage.id));\n    });\n  };\n};\nexport const updateAppointment = (id, date) => {\n  return dispatch => {\n    fetch(`https://peaceful-atoll-37638.herokuapp.com/appointments/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        appoint_date: date\n      })\n    }).then(r => r.json()).then(data => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Schedule is updated!'\n      });\n      dispatch(authUser(localStorage.token, localStorage.id));\n    });\n  };\n};\nexport const setSource = source => {\n  return {\n    type: 'SEARCH_SOURCE',\n    source: source\n  };\n};\nexport const newSource = () => {\n  return dispatch => {\n    fetch('https://peaceful-atoll-37638.herokuapp.com/users').then(r => r.json()).then(data => dispatch(setSource(data)));\n  };\n};\nexport const setSearchedUser = user => {\n  return {\n    type: \"SEARCHED_USER\",\n    searchedUser: user\n  };\n};\nexport const setSearchedValue = value => {\n  return {\n    type: 'SET_SEARCHED_VALUE',\n    value: value\n  };\n};","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/All projects/Final Project/Therappoint_frontend/src/reducer/actions.js"],"names":["Swal","setCategory","category","type","setToken","token","id","setUser","user","createUser","dispatch","fetch","method","headers","body","JSON","stringify","then","r","json","data","errors","fire","icon","title","text","localStorage","user_id","authUser","loginUser","LogOut","updateSuccess","updated","changeUpdateState","updateUser","deleteUser","removeItem","setDate","date","setPickedUserId","pickedId","createAppointment","userId01","userId02","client_id","provider_id","appoint_date","deleteAppointment","updateAppointment","setSource","source","newSource","setSearchedUser","searchedUser","setSearchedValue","value"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAE,cADH;AAEHD,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAKH,CANM;AAQP,OAAO,MAAME,QAAQ,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAE,WADH;AAEHE,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,EAAE,EAAEA;AAHD,GAAP;AAKH,CANM;AASP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACHL,IAAAA,IAAI,EAAE,UADH;AAEHK,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,UAAU,GAAID,IAAD,IAAU;AAEhC,SAAQE,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAF6C;AAMtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANgD,KAArD,CAAL,CAQCS,IARD,CAQMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARX,EASCF,IATD,CASMG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,MAAT,EAAiB;AACbrB,QAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAEL,IAAI,CAACC;AAHL,SAAV;AAKH,OAND,MAMO;AACHK,QAAAA,YAAY,CAACrB,KAAb,GAAqBe,IAAI,CAACf,KAA1B;AACAqB,QAAAA,YAAY,CAACpB,EAAb,GAAkBc,IAAI,CAACO,OAAvB;AACAjB,QAAAA,QAAQ,CAACN,QAAQ,CAACgB,IAAI,CAACf,KAAN,EAAae,IAAI,CAACO,OAAlB,CAAT,CAAR;AACAjB,QAAAA,QAAQ,CAACkB,QAAQ,CAACF,YAAY,CAACrB,KAAd,EAAqBqB,YAAY,CAACpB,EAAlC,CAAT,CAAR;AACH;AAEJ,KAvBD;AAwBH,GAzBD;AA0BH,CA5BM;AA8BP,OAAO,MAAMuB,SAAS,GAAIrB,IAAD,IAAU;AAC/B,SAAQE,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACvDC,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAF8C;AAMvDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANiD,KAArD,CAAL,CAQAS,IARA,CAQKC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARV,EASAF,IATA,CASKG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,MAAT,EAAiB;AAChBrB,QAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAEL,IAAI,CAACC;AAHL,SAAV;AAKA,OAND,MAMO;AAEHK,QAAAA,YAAY,CAACrB,KAAb,GAAqBe,IAAI,CAACf,KAA1B;AACAqB,QAAAA,YAAY,CAACpB,EAAb,GAAkBc,IAAI,CAACd,EAAvB;AAEAI,QAAAA,QAAQ,CAACN,QAAQ,CAACgB,IAAI,CAACf,KAAN,EAAae,IAAI,CAACd,EAAlB,CAAT,CAAR;AACAI,QAAAA,QAAQ,CAACkB,QAAQ,CAACF,YAAY,CAACrB,KAAd,EAAqBqB,YAAY,CAACpB,EAAlC,CAAT,CAAR;AAGH;AAGJ,KA5BA;AA6BH,GA9BD;AA+BH,CAhCM;AAmCP,OAAO,MAAMsB,QAAQ,GAAG,CAACvB,KAAD,EAAQC,EAAR,KAAe;AAEnC,SAAQI,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,oDAAmDL,EAAG,EAAxD,EAA0D;AAC3DO,MAAAA,OAAO,EAAE;AACL,yBAAiBR;AADZ;AADkD,KAA1D,CAAL,CAKCY,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMG,IAAI,IAAI;AACVV,MAAAA,QAAQ,CAACH,OAAO,CAACa,IAAD,CAAR,CAAR;AACH,KARD;AASH,GAVD;AAWH,CAbM;AAeP,OAAO,MAAMU,MAAM,GAAG,MAAM;AACxB,SAAO;AACH3B,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAM4B,aAAa,GAAG,MAAM;AAC9B,SAAO;AACH5B,IAAAA,IAAI,EAAE,gBADH;AAEH6B,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIJ,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACH9B,IAAAA,IAAI,EAAE,qBADH;AAEH6B,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALM;AAQP,OAAO,MAAME,UAAU,GAAI1B,IAAD,IAAU;AAEhC,SAAQE,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,oDAAmDH,IAAI,CAACF,EAAG,EAA7D,EAAgE;AACjEM,MAAAA,MAAM,EAAE,OADyD;AAEjEC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFwD;AAMjEC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAN0D,KAAhE,CAAL,CAQCS,IARD,CAQMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARX,EASCF,IATD,CASMG,IAAI,IACN;AACI,UAAIA,IAAI,CAACC,MAAT,EAAiB;AACbrB,QAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAEL,IAAI,CAACC;AAHL,SAAV;AAKH,OAND,MAMO;AAEJX,QAAAA,QAAQ,CAACH,OAAO,CAACa,IAAD,CAAR,CAAR;AAEF;AAEJ,KAvBL;AA0BH,GA3BD;AA4BH,CA9BM;AAiCP,OAAO,MAAMe,UAAU,GAAI3B,IAAD,IAAU;AAChC,SAAQE,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,oDAAmDH,IAAI,CAACF,EAAG,EAA7D,EAA+D;AAChEM,MAAAA,MAAM,EAAE;AADwD,KAA/D,CAAL,CAGCK,IAHD,CAGMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAHX,EAICF,IAJD,CAIMG,IAAI,IAAI;AACXM,MAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAV,MAAAA,YAAY,CAACU,UAAb,CAAwB,IAAxB;AACCpC,MAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,KAAK,EAAE,oBAFD;AAGNC,QAAAA,IAAI,EAAE;AAHA,OAAV;AAKEf,MAAAA,QAAQ,CAACN,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAT,CAAR;AACAM,MAAAA,QAAQ,CAACkB,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAT,CAAR;AACL,KAdD;AAeH,GAhBD;AAmBH,CApBM;AAuBP,OAAO,MAAMS,OAAO,GAAIC,IAAD,IAAU;AAE7B,SAAO;AACHnC,IAAAA,IAAI,EAAE,MADH;AAEHmC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIjC,EAAD,IAAQ;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAE,aADH;AAEHqC,IAAAA,QAAQ,EAAElC;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMmC,iBAAiB,GAAG,CAACH,IAAD,EAAOI,QAAP,EAAiBC,QAAjB,KAA8B;AAE3D,SAAQjC,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,yDAAD,EAA4D;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFoD;AAM7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB4B,QAAAA,SAAS,EAAEF,QADM;AAEjBG,QAAAA,WAAW,EAAEF,QAFI;AAGjBG,QAAAA,YAAY,EAAER;AAHG,OAAf;AANuD,KAA5D,CAAL,CAYCrB,IAZD,CAYMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAZX,EAaCF,IAbD,CAaMG,IAAI,IAAG;AACT,UAAGA,IAAI,CAACC,MAAR,EAAgB;AACZrB,QAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAEL,IAAI,CAACC;AAHL,SAAV;AAKH,OAND,MAMK;AACLrB,QAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAG,mBAAkBJ,IAAI,CAAC0B,YAAa;AAFtC,SAAV;AAIEpC,QAAAA,QAAQ,CAACkB,QAAQ,CAACF,YAAY,CAACrB,KAAd,EAAqBqB,YAAY,CAACpB,EAAlC,CAAT,CAAR;AAAwD;AAC7D,KA1BD;AA2BH,GA5BD;AA6BH,CA/BM;AAkCP,OAAO,MAAMyC,iBAAiB,GAAIzC,EAAD,IAAQ;AACrC,SAAQI,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,2DAA0DL,EAAG,EAA/D,EAAkE;AACnEM,MAAAA,MAAM,EAAE;AAD2D,KAAlE,CAAL,CAGCK,IAHD,CAGMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAHX,EAICF,IAJD,CAIMG,IAAI,IAAI;AACVpB,MAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,QAAAA,IAAI,EAAE,SADA;AAENE,QAAAA,IAAI,EAAE;AAFA,OAAV;AAIEf,MAAAA,QAAQ,CAACkB,QAAQ,CAACF,YAAY,CAACrB,KAAd,EAAqBqB,YAAY,CAACpB,EAAlC,CAAT,CAAR;AACL,KAVD;AAWH,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAM0C,iBAAiB,GAAG,CAAC1C,EAAD,EAAKgC,IAAL,KAAc;AAC3C,SAAQ5B,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,2DAA0DL,EAAG,EAA/D,EAAkE;AACnEM,MAAAA,MAAM,EAAE,OAD2D;AAEnEC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAF0D;AAMnEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB8B,QAAAA,YAAY,EAAER;AADG,OAAf;AAN6D,KAAlE,CAAL,CAUCrB,IAVD,CAUMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAVX,EAWCF,IAXD,CAWMG,IAAI,IAAI;AACVpB,MAAAA,IAAI,CAACsB,IAAL,CAAU;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,KAAK,EAAE;AAFD,OAAV;AAIEd,MAAAA,QAAQ,CAACkB,QAAQ,CAACF,YAAY,CAACrB,KAAd,EAAqBqB,YAAY,CAACpB,EAAlC,CAAT,CAAR;AACL,KAjBD;AAkBH,GAnBD;AAoBH,CArBM;AAwBP,OAAO,MAAM2C,SAAS,GAAIC,MAAD,IAAY;AACjC,SAAO;AACH/C,IAAAA,IAAI,EAAE,eADH;AAEH+C,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAQP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAQzC,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACCM,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,IAAI,IACNV,QAAQ,CAACuC,SAAS,CAAC7B,IAAD,CAAV,CAHZ;AAIH,GALD;AAMH,CAPM;AAUP,OAAO,MAAMgC,eAAe,GAAI5C,IAAD,IAAU;AACrC,SAAO;AACHL,IAAAA,IAAI,EAAE,eADH;AAEHkD,IAAAA,YAAY,EAAE7C;AAFX,GAAP;AAIH,CALM;AAOP,OAAO,MAAM8C,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO;AACHpD,IAAAA,IAAI,EAAE,oBADH;AAEHoD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM","sourcesContent":["import Swal from 'sweetalert2'\n\nexport const setCategory = (category) => {\n    return {\n        type: \"SET_CATEGORY\",\n        category: category\n    }\n    \n}\n\nexport const setToken = (token, id) => {\n    return {\n        type: 'SET_TOKEN',\n        token: token,\n        id: id\n    }\n}\n\n\nexport const setUser = (user) => {\n    return {\n        type: \"SET_USER\",\n        user: user\n    }\n}\n\nexport const createUser = (user) => {\n    \n    return (dispatch) => {\n        fetch('https://peaceful-atoll-37638.herokuapp.com/users', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/json\",\n                'accept': \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n        .then(r => r.json())\n        .then(data => {\n            if (data.errors) {\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Oops...',\n                    text: data.errors\n                  })\n            } else {\n                localStorage.token = data.token\n                localStorage.id = data.user_id\n                dispatch(setToken(data.token, data.user_id))\n                dispatch(authUser(localStorage.token, localStorage.id))\n            }\n            \n        })\n    }\n}\n\nexport const loginUser = (user) => {\n    return (dispatch) => {\n        fetch(\"https://peaceful-atoll-37638.herokuapp.com/login\", {\n           method: 'POST',\n           headers: {\n               \"content-type\": \"application/json\",\n               \"accept\": \"application/json\"\n           },\n           body: JSON.stringify(user)\n       })\n       .then(r => r.json())\n       .then(data => {\n           if (data.errors) {\n            Swal.fire({\n                icon: 'warning',\n                title: 'Oops...',\n                text: data.errors\n              })\n           } else {\n               \n               localStorage.token = data.token\n               localStorage.id = data.id\n            \n               dispatch(setToken(data.token, data.id))\n               dispatch(authUser(localStorage.token, localStorage.id))\n                \n               \n           }\n\n          \n       })\n    }\n}\n\n\nexport const authUser = (token, id) => {\n    \n    return (dispatch) => {\n        fetch(`https://peaceful-atoll-37638.herokuapp.com/users/${id}`,{\n            headers: {\n                \"Authorization\": token\n            }\n        })\n        .then(r => r.json())\n        .then(data => {\n            dispatch(setUser(data))\n        })\n    }\n}\n\nexport const LogOut = () => {\n    return {\n        type: \"LOG_OUT\"\n    }\n}\n\nexport const updateSuccess = () => {\n     return {\n         type: 'UPDATE_SUCCESS',\n         updated: true\n     }\n}\n\nexport const changeUpdateState = () => {\n    return {\n        type: 'CHANGE_UPDATE_STATE',\n        updated: false\n    }\n}\n\n\nexport const updateUser = (user) => {\n  \n    return (dispatch) => {\n        fetch(`https://peaceful-atoll-37638.herokuapp.com/users/${user.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body:  JSON.stringify(user)\n        })\n        .then(r => r.json())\n        .then(data => \n            {\n                if (data.errors) {\n                    Swal.fire({\n                        icon: 'warning',\n                        title: 'Oops...',\n                        text: data.errors\n                      })\n                } else {\n                   \n                   dispatch(setUser(data))\n                 \n                }\n                \n            }\n            \n        )\n    }\n}\n\n\nexport const deleteUser = (user) => {\n    return (dispatch) => {\n        fetch(`https://peaceful-atoll-37638.herokuapp.com/users/${user.id}`,{\n            method: 'DELETE'\n        })\n        .then(r => r.json())\n        .then(data => {\n           localStorage.removeItem('token')\n           localStorage.removeItem('id')\n            Swal.fire({\n                icon: 'success',\n                title: 'Sad to see you go!',\n                text: 'User is deleted!'\n              })\n              dispatch(setToken(null, null))\n              dispatch(authUser(null, null))\n        })\n    }\n\n\n}\n\n\nexport const setDate = (date) => {\n    \n    return {\n        type: 'DATE',\n        date: date\n    }\n}\n\nexport const setPickedUserId = (id) => {\n    return {\n        type: 'PICKED_USER',\n        pickedId: id\n    }\n}\n\nexport const createAppointment = (date, userId01, userId02) => {\n    \n    return (dispatch) => {\n        fetch('https://peaceful-atoll-37638.herokuapp.com/appointments', {\n            method: 'POST',\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                client_id: userId01,\n                provider_id: userId02,\n                appoint_date: date\n            })\n        })\n        .then(r => r.json())\n        .then(data=> {\n            if(data.errors) {\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Oops...',\n                    text: data.errors\n                  })\n            }else{\n            Swal.fire({\n                icon: 'success',\n                title: `Appointment for ${data.appoint_date} is scheduled!`\n              })\n              dispatch(authUser(localStorage.token, localStorage.id))}\n        })\n    }\n}\n\n\nexport const deleteAppointment = (id) => {\n    return (dispatch) => {\n        fetch(`https://peaceful-atoll-37638.herokuapp.com/appointments/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(r => r.json())\n        .then(data => {\n            Swal.fire({\n                icon: 'success',\n                text: 'Appointment is canceled!'\n              })\n              dispatch(authUser(localStorage.token, localStorage.id))\n        })\n    }\n}\n\nexport const updateAppointment = (id, date) => {\n    return (dispatch) => {\n        fetch(`https://peaceful-atoll-37638.herokuapp.com/appointments/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                appoint_date: date\n            })\n        })\n        .then(r => r.json())\n        .then(data => {\n            Swal.fire({\n                icon: 'success',\n                title: 'Schedule is updated!'\n              })\n              dispatch(authUser(localStorage.token, localStorage.id))\n        })\n    }\n}\n\n\nexport const setSource = (source) => {\n    return {\n        type: 'SEARCH_SOURCE',\n        source: source\n    }\n}\n\n\nexport const newSource = () => {\n    return (dispatch) => {\n        fetch('https://peaceful-atoll-37638.herokuapp.com/users')\n        .then(r => r.json())\n        .then(data => \n            dispatch(setSource(data)))\n    }\n}\n\n\nexport const setSearchedUser = (user) => {\n    return {\n        type: \"SEARCHED_USER\",\n        searchedUser: user\n    }\n}\n\nexport const setSearchedValue = (value) => {\n    return {\n        type: 'SET_SEARCHED_VALUE',\n        value: value\n    }\n}"]},"metadata":{},"sourceType":"module"}