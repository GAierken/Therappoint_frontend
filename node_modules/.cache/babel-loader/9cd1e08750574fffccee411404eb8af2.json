{"ast":null,"code":"import _objectSpread from \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Search } from 'semantic-ui-react';\nimport { setSearchedUser } from '../reducer/actions';\nimport { Redirect } from 'react-router';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      results: [],\n      value: '',\n      resultSelect: false\n    };\n\n    this.handleSearchChange = evt => {\n      this.setState(_objectSpread({}, this.state, {\n        value: evt.target.value.toLowerCase()\n      }));\n      console.table(this.props.source); // if(this.props.source && this.props.source.length > 0){\n      //     // different user would have different search result\n      //     if(this.props.user.specialty){\n      //         const newSource = [...this.props.source].map(object => {\n      //             return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase(), ...object}\n      //         }).filter((obj) => {\n      //             return !obj.specialty\n      //         }\n      //         )\n      //         const results = newSource.filter((obj) => {\n      //              return obj.title.includes(this.state.value)\n      //         })\n      //         this.setState({\n      //             ...this.state,\n      //             results: results\n      //         })}else{\n      //             const newSource = this.props.source.map(object => {\n      //                 return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase(), ...object}\n      //             }).filter((obj) => {\n      //                 return obj.specialty\n      //             }\n      //             )\n      //             const results = newSource.filter((obj) => {\n      //                  return obj.title.includes(this.state.value)\n      //             })\n      //             this.setState({\n      //                 ...this.state,\n      //                 results: results\n      //             })\n      //         }\n      //     }\n    };\n\n    this.handleResultSelect = evt => {\n      let searchedUser = [...this.state.results].find(user => {\n        return user.title === evt.target.innerText;\n      });\n      this.props.setSearchedUser(searchedUser);\n      localStorage.searched_id = searchedUser.id;\n      localStorage.searched_name = searchedUser.first_name + \" \" + searchedUser.last_name;\n      localStorage.searched_img = searchedUser.img_url;\n      localStorage.searched_address = searchedUser.address;\n      localStorage.searched_specialty = searchedUser.specialty;\n      localStorage.searched_board_certified = searchedUser.board_certified;\n      localStorage.searched_email = searchedUser.searched_email;\n      localStorage.searched_phone_number = searchedUser.searched_phone_number;\n      this.setState(_objectSpread({}, this.state, {\n        resultSelect: !this.state.resultSelect\n      }));\n    };\n  }\n\n  render() {\n    if (this.state.resultSelect === true) {\n      return React.createElement(Redirect, {\n        to: \"/portfolio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    } else {\n      return this.props.user.specialty ? React.createElement(Search, {\n        onSearchChange: this.handleSearchChange,\n        placeholder: \"Find your client by name\",\n        results: this.state.results,\n        onResultSelect: this.handleResultSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }) : React.createElement(Search, {\n        onSearchChange: this.handleSearchChange,\n        placeholder: \"Find your provider by name\",\n        results: this.state.results,\n        onResultSelect: this.handleResultSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setSearchedUser\n})(SearchBar);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js"],"names":["React","connect","Search","setSearchedUser","Redirect","SearchBar","Component","state","isLoading","results","value","resultSelect","handleSearchChange","evt","setState","target","toLowerCase","console","table","props","source","handleResultSelect","searchedUser","find","user","title","innerText","localStorage","searched_id","id","searched_name","first_name","last_name","searched_img","img_url","searched_address","address","searched_specialty","specialty","searched_board_certified","board_certified","searched_email","searched_phone_number","render","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAASC,eAAT,QAA+B,oBAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAGA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,YAAY,EAAE;AAJV,KAF8B;;AAAA,SAYtCC,kBAZsC,GAYhBC,GAAD,IAAS;AAG1B,WAAKC,QAAL,mBACO,KAAKP,KADZ;AAEIG,QAAAA,KAAK,EAAEG,GAAG,CAACE,MAAJ,CAAWL,KAAX,CAAiBM,WAAjB;AAFX;AAKAC,MAAAA,OAAO,CAACC,KAAR,CAAc,KAAKC,KAAL,CAAWC,MAAzB,EAR0B,CAUxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGP,KA9DuC;;AAAA,SAgEtCC,kBAhEsC,GAgEhBR,GAAD,IAAS;AACzB,UAAIS,YAAY,GAAG,CAAC,GAAG,KAAKf,KAAL,CAAWE,OAAf,EAAwBc,IAAxB,CAA8BC,IAAD,IAAU;AACtD,eAAOA,IAAI,CAACC,KAAL,KAAeZ,GAAG,CAACE,MAAJ,CAAWW,SAAjC;AACH,OAFkB,CAAnB;AAIG,WAAKP,KAAL,CAAWhB,eAAX,CAA2BmB,YAA3B;AAEAK,MAAAA,YAAY,CAACC,WAAb,GAA2BN,YAAY,CAACO,EAAxC;AACAF,MAAAA,YAAY,CAACG,aAAb,GAA6BR,YAAY,CAACS,UAAb,GAA0B,GAA1B,GAAgCT,YAAY,CAACU,SAA1E;AACAL,MAAAA,YAAY,CAACM,YAAb,GAA4BX,YAAY,CAACY,OAAzC;AACAP,MAAAA,YAAY,CAACQ,gBAAb,GAAgCb,YAAY,CAACc,OAA7C;AACAT,MAAAA,YAAY,CAACU,kBAAb,GAAkCf,YAAY,CAACgB,SAA/C;AACAX,MAAAA,YAAY,CAACY,wBAAb,GAAwCjB,YAAY,CAACkB,eAArD;AACAb,MAAAA,YAAY,CAACc,cAAb,GAA8BnB,YAAY,CAACmB,cAA3C;AACAd,MAAAA,YAAY,CAACe,qBAAb,GAAqCpB,YAAY,CAACoB,qBAAlD;AAEJ,WAAK5B,QAAL,mBACQ,KAAKP,KADb;AACoBI,QAAAA,YAAY,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAD9C;AAGH,KAnFqC;AAAA;;AAuFxCgC,EAAAA,MAAM,GAAE;AAIJ,QAAG,KAAKpC,KAAL,CAAWI,YAAX,KAA4B,IAA/B,EAAqC;AACjC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEK;AACH,aAAQ,KAAKQ,KAAL,CAAWK,IAAX,CAAgBc,SAAhB,GACN,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAE,KAAK1B,kBAA7B;AAAiD,QAAA,WAAW,EAAC,0BAA7D;AAAwF,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWE,OAA5G;AAAqH,QAAA,cAAc,EAAE,KAAKY,kBAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,GAGN,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAE,KAAKT,kBAA7B;AAAiD,QAAA,WAAW,EAAC,4BAA7D;AAA0F,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWE,OAA9G;AAAuH,QAAA,cAAc,EAAE,KAAKY,kBAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AASL;AAEA;;AAzGuC;;AA4GxC,MAAMuB,eAAe,GAAIrC,KAAD,IAAW;AAC/B,SAAO;AACHiB,IAAAA,IAAI,EAAEjB,KAAK,CAACiB,IADT;AAEHJ,IAAAA,MAAM,EAAEb,KAAK,CAACa;AAFX,GAAP;AAIH,CALD;;AAQA,eAAenB,OAAO,CAAC2C,eAAD,EAAkB;AAACzC,EAAAA;AAAD,CAAlB,CAAP,CAA4CE,SAA5C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport {Search} from 'semantic-ui-react'\nimport { setSearchedUser} from '../reducer/actions'\nimport { Redirect } from 'react-router'\n\n\nclass SearchBar extends React.Component {\n\n  state = {\n      isLoading: false,\n      results: [],\n      value: '',\n      resultSelect: false\n\n  }\n\n\n\n  handleSearchChange = (evt) => {\n      \n    \n      this.setState({\n          ...this.state,\n          value: evt.target.value.toLowerCase()\n      })\n\n      console.table(this.props.source)\n \n        // if(this.props.source && this.props.source.length > 0){\n        //     // different user would have different search result\n        //     if(this.props.user.specialty){\n        //         const newSource = [...this.props.source].map(object => {\n        //             return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase(), ...object}\n        //         }).filter((obj) => {\n        //             return !obj.specialty\n        //         }\n        //         )\n\n        //         const results = newSource.filter((obj) => {\n        //              return obj.title.includes(this.state.value)\n                    \n        //         })\n\n        //         this.setState({\n        //             ...this.state,\n        //             results: results\n        //         })}else{\n        //             const newSource = this.props.source.map(object => {\n        //                 return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase(), ...object}\n        //             }).filter((obj) => {\n        //                 return obj.specialty\n        //             }\n        //             )\n    \n        //             const results = newSource.filter((obj) => {\n        //                  return obj.title.includes(this.state.value)\n                        \n        //             })\n    \n        //             this.setState({\n        //                 ...this.state,\n        //                 results: results\n        //             })\n\n        //         }\n        //     }\n        \n        \n}\n\n  handleResultSelect = (evt) => {\n       let searchedUser = [...this.state.results].find((user) => {\n           return user.title === evt.target.innerText\n       })\n\n          this.props.setSearchedUser(searchedUser)\n         \n          localStorage.searched_id = searchedUser.id\n          localStorage.searched_name = searchedUser.first_name + \" \" + searchedUser.last_name\n          localStorage.searched_img = searchedUser.img_url\n          localStorage.searched_address = searchedUser.address\n          localStorage.searched_specialty = searchedUser.specialty\n          localStorage.searched_board_certified = searchedUser.board_certified\n          localStorage.searched_email = searchedUser.searched_email\n          localStorage.searched_phone_number = searchedUser.searched_phone_number\n\n      this.setState(\n          {...this.state, resultSelect: !this.state.resultSelect}\n      )\n  }\n  \n\n\nrender(){\n\n  \n     \n    if(this.state.resultSelect === true) {\n        return <Redirect to=\"/portfolio\"></Redirect>\n    }else{\n      return (this.props.user.specialty?\n        <Search onSearchChange={this.handleSearchChange} placeholder='Find your client by name' results={this.state.results} onResultSelect={this.handleResultSelect}/>\n        :\n        <Search onSearchChange={this.handleSearchChange} placeholder='Find your provider by name' results={this.state.results} onResultSelect={this.handleResultSelect}/>\n       )\n\n        \n\n\n}\n\n}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        source: state.source\n    }\n}\n\n\nexport default connect(mapStateToProps, {setSearchedUser})(SearchBar)"]},"metadata":{},"sourceType":"module"}