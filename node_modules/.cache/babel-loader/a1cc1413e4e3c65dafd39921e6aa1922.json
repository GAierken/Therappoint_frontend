{"ast":null,"code":"import _objectSpread from \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Search } from 'semantic-ui-react';\nimport { newSource } from '../reducer/actions';\nimport { Redirect } from 'react-router';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      results: [],\n      value: '',\n      resultSelect: false\n    };\n\n    this.handleSearchChange = evt => {\n      this.setState(_objectSpread({}, this.state, {\n        value: evt.target.value.toLowerCase()\n      }));\n\n      if (this.state.value) {\n        this.props.newSource();\n      }\n\n      const sleep = milliseconds => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds));\n      };\n\n      sleep(1000).then(() => {\n        const newSource = this.props.source.map(object => {\n          return _objectSpread({\n            title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase()\n          }, object);\n        });\n        const results = newSource.filter(obj => {\n          return obj.title.includes(this.state.value);\n        });\n        this.setState(_objectSpread({}, this.state, {\n          results: results\n        }));\n      });\n    };\n\n    this.handleResultSelect = () => {\n      this.setState(_objectSpread({}, this.state, {\n        resultSelect: !this.state.resultSelect\n      }));\n    };\n  }\n\n  render() {\n    if (this.state.resultSelect === true) {\n      return React.createElement(Redirect, {\n        to: \"/portfolio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    } else {\n      return this.props.user.specialty ? React.createElement(Search, {\n        onSearchChange: this.handleSearchChange,\n        placeholder: \"Find your client by name\",\n        results: this.state.results,\n        onResultSelect: this.handleResultSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : React.createElement(Search, {\n        onSearchChange: this.handleSearchChange,\n        placeholder: \"Find your provider by name\",\n        results: this.state.results,\n        onResultSelect: this.handleResultSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps, {\n  newSource\n})(SearchBar);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js"],"names":["React","connect","Search","newSource","Redirect","SearchBar","Component","state","isLoading","results","value","resultSelect","handleSearchChange","evt","setState","target","toLowerCase","props","sleep","milliseconds","Promise","resolve","setTimeout","then","source","map","object","title","first_name","last_name","filter","obj","includes","handleResultSelect","render","user","specialty","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport {Search} from 'semantic-ui-react'\nimport {newSource} from '../reducer/actions'\nimport { Redirect } from 'react-router'\n\nclass SearchBar extends React.Component {\n\n  state = {\n      isLoading: false,\n      results: [],\n      value: '',\n      resultSelect: false\n\n  }\n\n\n  handleSearchChange = (evt) => {\n     \n      this.setState({\n          ...this.state,\n          value: evt.target.value.toLowerCase()\n      })\n      \n     if(this.state.value){\n         this.props.newSource()\n     }\n     \n   const sleep = milliseconds => {\n       return new Promise(resolve => setTimeout (resolve, milliseconds))\n   }\n   sleep(1000).then(() => {\n        const newSource = this.props.source.map(object => {\n            return { title: object.first_name.toLowerCase() + \" \" + object.last_name.toLowerCase(), ...object}\n        })\n        \n        const results = newSource.filter((obj) => {\n             return obj.title.includes(this.state.value)\n            \n        })\n        this.setState({\n            ...this.state,\n            results: results\n        })\n   }\n   )\n      \n\n  }\n  \n\n  handleResultSelect = () => {\n      \n      this.setState(\n          {...this.state, resultSelect: !this.state.resultSelect}\n      )\n  }\n  \n\n\nrender(){\n  \n    if(this.state.resultSelect === true) {\n        return <Redirect to=\"/portfolio\"></Redirect>\n    }else{\n      return (this.props.user.specialty?\n        <Search onSearchChange={this.handleSearchChange} placeholder='Find your client by name' results={this.state.results} onResultSelect={this.handleResultSelect}/>\n        :\n        <Search onSearchChange={this.handleSearchChange} placeholder='Find your provider by name' results={this.state.results} onResultSelect={this.handleResultSelect}/>\n       )\n\n        \n\n\n}\n\n}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        source: state.source,\n    }\n}\n\n\nexport default connect(mapStateToProps, {newSource})(SearchBar)"]},"metadata":{},"sourceType":"module"}