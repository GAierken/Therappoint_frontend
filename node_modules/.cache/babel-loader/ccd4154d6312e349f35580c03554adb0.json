{"ast":null,"code":"import _objectSpread from \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Profile.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Profile.css';\nimport { Link } from 'react-router-dom';\nimport { LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource } from '../reducer/actions';\nimport uuid from 'uuid';\nimport Calendar from './Calendar';\nimport SearcBar from './SearchBar';\nimport MapContainer from './MapContainer';\nimport { Segment, Button, List, Image, Grid, Modal, Header } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      rescheduleClicked: false,\n      rescheduleAppoinId: ''\n    };\n\n    this.handleLogOutClick = () => {\n      localStorage.clear();\n      this.props.LogOut();\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.handleDelete = () => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('id');\n      this.props.deleteUser(this.props.user);\n    };\n\n    this.appointmentLi = () => {\n      return this.props.user.provider_appointments.map(appoint => {\n        let provider = this.props.user.providers.find(p => p.id === appoint.provider_id);\n        return React.createElement(List.Item, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          onClick: () => {\n            React.createElement(Modal, {\n              trigger: React.createElement(Button, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 56\n                },\n                __self: this\n              }, \"Show Modal\"),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, React.createElement(Modal.Header, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, \"Select a Photo\"), React.createElement(Modal.Content, {\n              image: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }, React.createElement(Image, {\n              wrapped: true,\n              size: \"medium\",\n              src: \"/images/avatar/large/rachel.png\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }), React.createElement(Modal.Description, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(Header, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, \"Default Profile Image\"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, \"We've found the following gravatar image associated with your e-mail address.\"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, \"Is it okay to use this photo?\")))); // Swal.fire({\n            //     icon: 'info',\n            //     text: `You have an appointment with ${provider.last_name} on ${appoint.appoint_date}`,\n            //     imageUrl: `${provider.img_url}`,\n            //     imageWidth: 200,\n            //     imageHeight: 200,\n            //     imageAlt: 'Custom image'\n            // }  \n            // )\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, appoint.appoint_date), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"mini\",\n          className: \"teal\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleSetReschedule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Reschedule\"), React.createElement(Button, {\n          size: \"mini\",\n          className: \"red\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleAppoDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Cancel\"))));\n      });\n    };\n\n    this.providersImg = () => {\n      const providers = [...this.props.user.providers];\n      const uniqueProviders = Array.from(new Set(providers.map(p => p.id))).map(id => {\n        return providers.find(p => {\n          return p.id === id;\n        });\n      });\n      return uniqueProviders.map(provider => {\n        return React.createElement(Image, {\n          size: \"tiny\",\n          onClick: this.pickProv,\n          key: uuid(),\n          \"data-id\": provider.id,\n          src: provider.img_url,\n          alt: provider.last_name,\n          circular: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.confirmAppo = () => {\n      if (this.props.user.specialty) {\n        this.props.createAppointment(this.props.date, this.props.pickedId, this.props.user.id);\n      } else {\n        this.props.createAppointment(this.props.date, this.props.user.id, this.props.pickedId);\n      }\n    };\n\n    this.pickProv = evt => {\n      this.props.setPickedUserId(evt.target.dataset.id);\n    };\n\n    this.handleAppoDelete = evt => {\n      this.props.deleteAppointment(evt.target.dataset.id);\n    };\n\n    this.handleSetReschedule = evt => {\n      this.setState(_objectSpread({}, this.state, {\n        rescheduleClicked: true,\n        rescheduleAppoinId: evt.target.dataset.id\n      }));\n    };\n\n    this.updateAppointdate = () => {\n      this.props.updateAppointment(this.state.rescheduleAppoinId, this.props.date);\n      this.setState(_objectSpread({}, this.state, {\n        rescheduleClicked: false\n      }));\n    };\n\n    this.providerAppoLi = () => {\n      return this.props.user.client_appointments.map(appoint => {\n        let client = this.props.user.clients.find(c => c.id === appoint.client_id);\n        return React.createElement(List.Item, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(List.Content, {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(List.Header, {\n          onClick: () => {\n            Swal.fire({\n              icon: 'info',\n              text: `You have an appointment with ${client.last_name} on ${appoint.appoint_date}`,\n              imageUrl: `${client.img_url}`,\n              imageWidth: 200,\n              imageHeight: 200,\n              imageAlt: 'Custom image'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, appoint.appoint_date), React.createElement(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"teal\",\n          size: \"mini\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleSetReschedule,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Reschedule\"), React.createElement(Button, {\n          className: \"red\",\n          size: \"mini\",\n          key: uuid(),\n          \"data-id\": appoint.id,\n          onClick: this.handleAppoDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Cancel\"))));\n      });\n    };\n\n    this.clientsImg = () => {\n      const clients = [...this.props.user.clients];\n      const uniqueClients = Array.from(new Set(clients.map(c => c.id))).map(id => {\n        return clients.find(c => {\n          return c.id === id;\n        });\n      });\n      return uniqueClients.map(client => {\n        return React.createElement(Image, {\n          size: \"tiny\",\n          onClick: this.pickProv,\n          key: uuid(),\n          \"data-id\": client.id,\n          src: client.img_url,\n          alt: client.last_name,\n          circular: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.changeUpdatedState = () => {\n      this.props.changeUpdateState();\n    };\n  }\n\n  componentDidMount() {\n    this.props.newSource();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"top div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(SearcBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      relaxed: true,\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.clicked ? React.createElement(Segment.Group, {\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      onClick: this.handleClick,\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(List.Icon, {\n      name: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Full name: \", this.props.user.first_name, \" \", this.props.user.last_name), React.createElement(List.Icon, {\n      name: \"marker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Address: \", this.props.user.address, \" \"), React.createElement(List.Icon, {\n      name: \"mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Email: \", this.props.user.email, \" \"), React.createElement(List.Icon, {\n      name: \"linkify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Contact: \", this.props.user.phone_number, \" \"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.changeUpdatedState,\n      className: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.handleDelete,\n      className: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Delete\"))))))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      address: this.props.user.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))) : React.createElement(Segment.Group, {\n      onClick: this.handleClick,\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: this.props.user.img_url,\n      alt: this.props.user.username,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Hi! Welcome \", this.props.user.username, \"! \"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.handleLogOutClick,\n      className: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Logout\")))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Please click on the picture to choose\", React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui tiny circular images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.props.user.providers ? this.providersImg() : null, this.props.user.clients ? this.clientsImg() : null))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Please choose a date to schedule your appointment\", React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"mini\",\n      className: \"teal\",\n      onClick: this.confirmAppo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Schedule\")))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Appointments:\", React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.props.user.provider_appointments ? this.appointmentLi() : null, this.props.user.client_appointments ? this.providerAppoLi() : null), this.state.rescheduleClicked ? React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Please select a date: \", React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"teal\",\n      onClick: this.updateAppointdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"confirm\")) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    date: state.date,\n    pickedId: state.pickedId,\n    updated: state.updated,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps, {\n  LogOut,\n  deleteUser,\n  setPickedUserId,\n  createAppointment,\n  deleteAppointment,\n  updateAppointment,\n  authUser,\n  changeUpdateState,\n  newSource\n})(Profile);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/Profile.js"],"names":["React","connect","Link","LogOut","deleteUser","setPickedUserId","createAppointment","deleteAppointment","updateAppointment","authUser","changeUpdateState","newSource","uuid","Calendar","SearcBar","MapContainer","Segment","Button","List","Image","Grid","Modal","Header","Swal","Profile","Component","state","clicked","rescheduleClicked","rescheduleAppoinId","handleLogOutClick","localStorage","clear","props","handleClick","setState","handleDelete","removeItem","user","appointmentLi","provider_appointments","map","appoint","provider","providers","find","p","id","provider_id","appoint_date","handleSetReschedule","handleAppoDelete","providersImg","uniqueProviders","Array","from","Set","pickProv","img_url","last_name","confirmAppo","specialty","date","pickedId","evt","target","dataset","updateAppointdate","providerAppoLi","client_appointments","client","clients","c","client_id","fire","icon","text","imageUrl","imageWidth","imageHeight","imageAlt","clientsImg","uniqueClients","changeUpdatedState","componentDidMount","render","first_name","address","email","phone_number","username","mapStateToProps","updated","source"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport './Profile.css'\nimport {Link} from 'react-router-dom'\nimport { LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource } from '../reducer/actions'\nimport uuid from 'uuid'\nimport Calendar from './Calendar'\nimport SearcBar from './SearchBar'\nimport MapContainer from './MapContainer'\nimport { Segment, Button, List, Image, Grid, Modal, Header } from 'semantic-ui-react';\nimport Swal from 'sweetalert2'\n\n\nclass Profile extends React.Component {\n\n state={\n     clicked: false,\n     rescheduleClicked: false,\n     rescheduleAppoinId: ''\n }\n\n componentDidMount() {\n   this.props.newSource()\n }\n\nhandleLogOutClick = () => {\n    \n    localStorage.clear()\n    \n    this.props.LogOut()\n  \n}\n\nhandleClick = () => {\n    this.setState({\n        clicked: !this.state.clicked\n    })\n}\n\n\nhandleDelete = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('id')\n    this.props.deleteUser(this.props.user)\n}\n\nappointmentLi = () => {\n  \n    return this.props.user.provider_appointments.map((appoint) => {\n           let provider = this.props.user.providers.find((p) => p.id === appoint.provider_id)\n           \n    return (\n                <List.Item key={uuid()}>\n                 <List.Content key={uuid()}>\n                    <List.Header onClick={() => {\n                        <Modal trigger={<Button>Show Modal</Button>}>\n                        <Modal.Header>Select a Photo</Modal.Header>\n                        <Modal.Content image>\n                          <Image wrapped size='medium' src='/images/avatar/large/rachel.png' />\n                          <Modal.Description>\n                            <Header>Default Profile Image</Header>\n                            <p>\n                              We've found the following gravatar image associated with your e-mail\n                              address.\n                            </p>\n                            <p>Is it okay to use this photo?</p>\n                          </Modal.Description>\n                        </Modal.Content>\n                      </Modal>\n                        // Swal.fire({\n                        //     icon: 'info',\n                        //     text: `You have an appointment with ${provider.last_name} on ${appoint.appoint_date}`,\n                        //     imageUrl: `${provider.img_url}`,\n                        //     imageWidth: 200,\n                        //     imageHeight: 200,\n                        //     imageAlt: 'Custom image'\n                        // }  \n                        // )\n                    }\n                    }>{appoint.appoint_date}</List.Header>\n                     <List.Description>\n                      <Button size=\"mini\" className=\"teal\" key={uuid()} data-id={appoint.id} onClick={this.handleSetReschedule}>Reschedule</Button> \n                      <Button size=\"mini\" className=\"red\" key={uuid()} data-id={appoint.id} onClick={this.handleAppoDelete}>Cancel</Button>\n                     </List.Description>\n                 </List.Content>\n                </List.Item>\n            )\n    }\n    )\n}\n\nprovidersImg = () => {\n    const providers = [...this.props.user.providers]\n\n    const uniqueProviders = Array.from(new Set(providers.map(p => p.id))).map((id) => {\n        return providers.find((p) => {\n            return p.id === id})})\n\n    \n    return uniqueProviders.map((provider) => {\n    return <Image size=\"tiny\" onClick={this.pickProv} key={uuid()} data-id={provider.id} src={provider.img_url} alt={provider.last_name } circular />\n    }\n    )\n}\n\nconfirmAppo = () => {\n  \n    if(this.props.user.specialty){\n    this.props.createAppointment(this.props.date, this.props.pickedId, this.props.user.id)}\n    else{\n        this.props.createAppointment(this.props.date, this.props.user.id, this.props.pickedId)}    \n   \n}\n\npickProv = (evt) => {\n    this.props.setPickedUserId(evt.target.dataset.id)\n    \n}\n\nhandleAppoDelete = (evt) => {\n    this.props.deleteAppointment(evt.target.dataset.id)\n}\n\nhandleSetReschedule = (evt) => {\n   \n    this.setState({\n        ...this.state,\n        rescheduleClicked: true,\n        rescheduleAppoinId: evt.target.dataset.id\n    })\n}\n\nupdateAppointdate = () => {\n    \n    this.props.updateAppointment(this.state.rescheduleAppoinId, this.props.date)\n    this.setState({\n        ...this.state,\n        rescheduleClicked: false\n    })\n}\n\n\n\nproviderAppoLi = () => {\n    return this.props.user.client_appointments.map((appoint) => {\n       \n        let client = this.props.user.clients.find((c) => c.id === appoint.client_id)\n        return (<List.Item key={uuid()}>\n                    <List.Content key={uuid()}>\n                        <List.Header onClick={() => {\n                        Swal.fire({\n                            icon: 'info',\n                            text: `You have an appointment with ${client.last_name} on ${appoint.appoint_date}`,\n                            imageUrl: `${client.img_url}`,\n                            imageWidth: 200,\n                            imageHeight: 200,\n                            imageAlt: 'Custom image'\n                        }  \n                        )\n                    }\n                    }>{appoint.appoint_date}</List.Header>\n                        <List.Description>\n                            <Button className=\"teal\" size=\"mini\" key={uuid()} data-id={appoint.id} onClick={this.handleSetReschedule}>Reschedule</Button> \n                            <Button className=\"red\" size=\"mini\" key={uuid()} data-id={appoint.id} onClick={this.handleAppoDelete}>Cancel</Button>\n                        </List.Description>\n                    </List.Content>\n                </List.Item>)\n        }\n        )\n}\n\nclientsImg = () => {\n    const clients = [...this.props.user.clients]\n    const uniqueClients = Array.from(new Set(clients.map(c => c.id))).map((id) => {\n        return clients.find((c) => {\n            return c.id === id})})\n    \n    \n    return uniqueClients.map((client) => {\n    return <Image size=\"tiny\" onClick={this.pickProv} key={uuid()} data-id={client.id} src={client.img_url} alt={client.last_name} circular/>\n    }\n    )\n}\n\nchangeUpdatedState = () => {\n    this.props.changeUpdateState()\n}\n\n\n\n    render(){\n       \n        return (\n           <div className=\"top div\">\n           {/* search bar */}\n           <SearcBar/>\n            <Grid relaxed columns={3}>\n                {/* beginning personal info */}\n               <Grid.Column>\n               <Segment>\n                    {this.state.clicked?\n                        <Segment.Group raised>\n                            <Segment onClick={this.handleClick} className=\"content\">\n                                <List.Item>\n                                 <List.Icon name='users'/>\n                                 <List.Content>Full name: {this.props.user.first_name} {this.props.user.last_name}</List.Content> \n                                 <List.Icon name=\"marker\"/>\n                                 <List.Content>Address: {this.props.user.address} </List.Content>\n                                 <List.Icon name=\"mail\"/>\n                                 <List.Content>Email: {this.props.user.email} </List.Content>\n                                 <List.Icon name=\"linkify\"/>\n                                 <List.Content>Contact: {this.props.user.phone_number} </List.Content> \n                               \n                                    <Segment>\n                                      <Grid>\n                                          <Grid.Column>\n                                            <Link to=\"/edit\"><Button size=\"mini\" onClick={this.changeUpdatedState} className='blue'>Edit</Button></Link>\n                                            <Link to=\"/\"><Button size=\"mini\" onClick={this.handleDelete} className='red' >Delete</Button></Link>\n                                          </Grid.Column>\n                                      </Grid>\n                                    </Segment>\n                                </List.Item>\n                            </Segment> \n                            <Grid.Row>\n                               <MapContainer address={this.props.user.address}/>\n                            </Grid.Row>\n                        </Segment.Group>\n                    :\n                        <Segment.Group  onClick={this.handleClick} raised>\n                            <Segment>\n                             <Image src={this.props.user.img_url} alt={this.props.user.username} size=\"medium\"/>\n                            </Segment>\n                            <Segment className=\"header\">Hi! Welcome {this.props.user.username}! </Segment>\n                            <Segment>\n                                <Grid>\n                                    <Grid.Column>\n                                        <Link to=\"/\"><Button size=\"mini\" onClick={this.handleLogOutClick} className=\"grey\">Logout</Button></Link>\n                                    </Grid.Column>\n                                </Grid>\n                            </Segment>\n                        </Segment.Group>\n                    }\n                    \n                    </Segment>\n                    </Grid.Column>\n\n                {/* beginning of calender appointment making column */}\n                <Grid.Column>\n                    <Segment>\n                        Please click on the picture to choose\n                        <Grid>\n                            <Grid.Column>\n                            <div className=\"ui tiny circular images\">\n                            {this.props.user.providers? this.providersImg():null}\n                            {this.props.user.clients? this.clientsImg():null}\n                            </div>\n                            </Grid.Column>\n                        </Grid>\n                        <Segment>Please choose a date to schedule your appointment\n                            <Grid><Grid.Column><Calendar /></Grid.Column></Grid>\n                        </Segment>\n                        \n                        <Segment>\n                            <Grid>\n                                <Grid.Column>\n                                    <Button size=\"mini\" className=\"teal\" onClick={this.confirmAppo}>Schedule</Button>\n                                </Grid.Column>  \n                            </Grid>\n                        </Segment>\n                    </Segment>\n               \n                </Grid.Column>\n                {/* beginning of apointment history */}\n                <Grid.Column>\n                    <Segment>\n                        Appointments:\n                        <List>\n                         {this.props.user.provider_appointments? this.appointmentLi(): null}\n                         {this.props.user.client_appointments? this.providerAppoLi(): null}\n                         </List>\n                         {this.state.rescheduleClicked? <Segment>Please select a date: <Calendar/><Button className=\"teal\" onClick={this.updateAppointdate}>confirm</Button></Segment>: null}\n                         \n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            </div>\n            \n            \n            \n            \n            \n            \n           \n           \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       user: state.user,\n       date: state.date,\n       pickedId: state.pickedId,\n       updated: state.updated,\n       source: state.source\n    }\n}\n\nexport default connect(mapStateToProps, {LogOut, deleteUser, setPickedUserId, createAppointment, deleteAppointment, updateAppointment, authUser, changeUpdateState, newSource})(Profile)"]},"metadata":{},"sourceType":"module"}