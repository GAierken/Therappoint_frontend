{"ast":null,"code":"var _jsxFileName = \"/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$')\n}));\n\nconst resultRenderer = ({\n  title\n}) => React.createElement(Label, {\n  content: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\nexport default class SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    console.log(this.props.user.specialty);\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      resultRenderer: resultRenderer\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconnect(mapStateToProps)(SearchBar);","map":{"version":3,"sources":["/Users/guligenaaierken/Desktop/Final Project/Therappoint_frontend/therappoint_frontend/src/components/SearchBar.js"],"names":["PropTypes","_","faker","React","Component","Search","Grid","Header","Segment","Label","connect","source","times","title","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","resultRenderer","propTypes","string","initialState","isLoading","results","value","SearchBar","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","render","console","log","props","user","specialty","debounce","leading","mapStateToProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport faker from 'faker'\nimport React, { Component } from 'react'\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$'),\n}))\n\nconst resultRenderer = ({ title }) => <Label content={title} />\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\nexport default class SearchBar extends Component {\n  state = initialState\n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.title)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch),\n      })\n    }, 300)\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state\n    console.log(this.props.user.specialty)\n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            resultRenderer={resultRenderer}\n            {...this.props}\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nconnect(mapStateToProps)(SearchBar)"]},"metadata":{},"sourceType":"module"}